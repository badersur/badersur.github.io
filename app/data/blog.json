{
  "notes": [
    "Timestamps are returned in ISO 8601 format.",
    "Blog posts' contents use CommonMark (Markdown) syntax.",
    "<end> in posts' contents is used for showing part of the content in the main page, you should replace it with a new line.",
    "Posts support HTML, JSON and XML formats. You should append .json or .xml to urls in order to use these formats."
  ],
  "posts": [
    {
      "content": "[Udacity's web development course][1] is one of my favorite \r\n[online courses][2]. It teaches some aspects of the front-end\r\nand focuses on the back-end. It helped me understand scaling, caching, security and how to create RESTful APIs.\r\n\r\nI think the following resources and notes will help you in this course:\r\n\r\n* If you need a refresher on Python or want to learn Python, consider [Google\u2019s Python Class (2-days)][3] or/and [Official Python Tutorial][4]. Ultimately, you should learn about some of the built-in functions like [dir(), help() and type()][5]\r\n\r\n[1]: https://www.udacity.com/course/web-development--cs253\r\n[2]: /courses?post\r\n[3]: https://developers.google.com/edu/python/\r\n[4]: https://docs.python.org/2/tutorial/index.html\r\n[5]: https://docs.python.org/2/library/functions.html\r\n\r\n<end>\r\n\r\n* [Download Official Python Documentation][6] to learn Python and search for answers for your Python questions!\r\n\r\n* Read [Mozilla's Getting started with the web][7] or/and take [Udacity\u2019s Intro to HTML and CSS course][8] in case you want to learn a little bit more about HTML, CSS and JavaScript\r\n\r\n* Note that this course uses [Google App Engine **Standard** Environment][9] and [App Engine SDK for Python][10] (Click on \u201c**Optionally, you can also download the original App Engine SDK for Python**\u201d on [their download page][10] to get the SDK)\r\n\r\n* Many applications and tools can run from the terminal (Click `Start` menu and search for `cmd` for Windows) but you will need to tell the Operating System where to find these tools by adding their directories to the **PATH environment variable** (Some installers do this for us). After downloading App Engine SDK zip file, unzip/extract it and:\r\n\r\n  - Search for how to add directories to the PATH for **Windows**! I don't have Windows nowadays and mostly the path will be updated by the installers. The following __(3)__ steps & commands **are not** helpful for Windows\r\n\r\n  - Open the Terminal (for Linux and maybe macOS, Press `Ctrl + Alt + T`), type each command of the following commands and hit `Enter`:\r\n\r\n    1. Change the current directory to **your App Engine SDK directory** using `cd`:\r\n        ```\r\n        cd /home/badersur/Downloads/google_appengine\r\n        ```\r\n    \r\n    2. Make your files executable (for Ubuntu/Linux and maybe for macOS. Read [Ubuntu's File Permissions document][11] for details):\r\n        ```\r\n        chmod u+x dev_appserver.py appcfg.py\r\n        ```\r\n\r\n    3. Open `~/.bashrc` or `~/.profile` or `/etc/profile.d/my_env_vars.sh` (Read [Ubuntu's Environment Variables document][12] for details):\r\n        ```\r\n        gedit ~/.bashrc\r\n        ```\r\n\r\n  - Add **App Engine SDK directory** to the PATH by adding these lines to the chosen file above:\r\n    ```\r\n    google_appengine=/home/badersur/Downloads/google_appengine\r\n    export PATH=$PATH:$google_appengine\r\n    ```\r\n   \r\n    Or create an alias for your files **instead of adding the directories to the PATH** (I've added these lines to `~/.bashrc`):\r\n    ```\r\n    alias dev=\"/home/badersur/Downloads/google_appengine/dev_appserver.py\"\r\n    alias appcfg=\"/home/badersur/Downloads/google_appengine/appcfg.py\"\r\n    ```\r\n\r\n    You can use any name for the aliases but make sure you don't hide another command by them! (Open the terminal, type the command/alias, press `Tab`, and if you don't see a suggestion then you can use it safely) Now we can use `dev` & `appcfg` instaed of `dev_appserver.py` & `appcfg.py`. Ubuntu 16.04 deletes the contents of `/tmp` -which is used by dev_appserver to store my data locally- on shutdown. This causes losing my data so I use an alias with a dev_appserver's option to solve this issue like this:\r\n    ```\r\n    gae_opt=\"--storage_path=/home/badersur/Downloads/gae_data\"\r\n    alias dev=\"/home/badersur/Downloads/google_appengine/dev_appserver.py $gae_opt\"\r\n    ```\r\n\r\n  - You should **close** the terminal after updating `~/.bashrc` or `~/.profile`, and you should **restart** your computer or **log out** after updating `/etc/profile.d/my_env_vars.sh`\r\n\r\n* Note also that this course **does not** use any billable components from Google Cloud Platform (App Engine) so **there is no need to sign up for a [free trial][13]**. Just make sure you have a google account, log in to [Google Cloud Console][14], create a new project and **note the id** (which **you can edit** to any thing you like) that will be part of your web application url (i.e. `your-project-id.appspot.com`) and will be used for deployment\r\n\r\n* You should keep your project files in a separate place other than App Engine SDK folder!\r\n\r\n* I suggest completing **Lesson 2a - Templates** before solving **Problem Set 2**!\r\n\r\n* Follow App Engine\u2019s tutorial: [Creating a Guestbook Application][15] to understand URL handlers, Google's Cloud Datastore, [Jinja2 templates][16], serving static files (like: .css, .js & .png) and [deployment][17] - I suggest after lesson 2 and before lesson 4. Open the **terminal/cmd** and:\r\n\r\n  - Type `dev_appserver.py --port [PORT_NUMBER] [YOUR_APP_DIR]` to test your web application locally (omit `--port [PORT_NUMBER]` to use the default: 8080, and type `dev_appserver.py -h` to know about other available options)\r\n\r\n  - Type `appcfg.py update [YOUR_APP_DIR] -A [YOUR_PROJECT_ID] -V [YOUR_VERSION_ID]` to deploy your app (omit `-A [YOUR_PROJECT_ID] -V [YOUR_VERSION_ID]` if you have set your application's values for `application` and `version` in app.yaml). **Note**: Set `debug` to `False` in your `webapp2.WSGIApplication(...)` before deployment or remove it.\r\n\r\n* This course uses [webapp2][18] web framework which is compatible with Google App Engine\u2019s webapp. Note that:\r\n\r\n  - `self.response.write()` [is similar to][19] `self.response.out.write()` so you can use any of 'em\r\n\r\n  - By default, the [Content-Type][20] header is `text/html; charset=utf-8`, including the encoding behavior. If you want to change it use `self.response.headers['Content-Type']`\r\n\r\n* [App Engine encourages us][21] to use NDB Client Library instead of the older DB Client Library (i.e. we should use `from google.appengine.ext import ndb` instead of `from google.appengine.ext import db`):\r\n    > **Note**: Developers building new applications are **strongly encouraged** to use the [NDB Client Library][22], which has several benefits compared to this client library, such as automatic entity caching via the Memcache API. If you are currently using the older DB Client Library, read the [DB to NDB Migration Guide][23]\r\n\r\n* [App Engine also recommends][24] using [Datastore queries][25] over [GQL][26] to access the full range of Cloud Datastore's query capabilities\r\n\r\n* So you submitted something to Datastore but it didn't show up immediately? Well, you should set a parent key in each entity to form an entity group and query these entities using this key (Mr. Steve used the parent key in [Problem Set 3][27] and explained it more in the [Ancestors video in Wrap-Up Questions][28] and [I've answered a question about this][29])\r\n\r\n* Download an IDE/editor that understands Python! At least it should be able to indent/format your code and provide code snippets. [PyCharm Professional Edition][30] has a great support for GAE and other projects, and you can [tweak][31] the [Community Edition][30] to support GAE. Also, [VS Code][32] supports Python & GAE via [Don's Python extension][33]\r\n\r\n* You may want to use [freegeoip.net/][34] or [ipinfo.io/][35] APIs to obtain user\u2019s location for **lesson 5**. But note that App Engine adds several headers to all requests like [X-AppEngine-CityLatLong][36] so *we can use it* instead of these APIs!\r\n\r\n* Download instructor\u2019s HW solutions: [HW2][37], [HW3][38], [HW4][39] & [HW5][40]\r\n\r\n* Visit [stackoverflow.com/questions/tagged/google-app-engine][41] for questions and answers about App Engine\r\n\r\n* You **should** include the contents of your [app.yaml][42], wsgi applications ( i.e. `app = webapp2.WSGIApplication(...)` ) and your project structure in your question if you have an issue with [URL handlers][43]\r\n\r\n* In [app.yaml][42], you **should** set `secure` subelement of the [handlers][42] to **always** for pages that accept critical values from users (like signup & login pages):\r\n    ```\r\n    handlers:\r\n    - url: /signup\r\n      script: signing.app\r\n      secure: always\r\n\r\n    - url: /login\r\n      script: signing.app\r\n      secure: always\r\n    ```\r\n\r\n## Extra\r\n\r\nThe previous resources are more than enough for the course, but if you need more:\r\n\r\n- Read [Google's Web][44] to learn how to develop the next generation of applications for the web\r\n\r\n- Use [Google's PageSpeed Insights][45] to identify ways to make your site faster and more mobile-friendly\r\n\r\n- Use [Microsoft's Site scan][46] to run a quick code scan on any URL to check for out-of-date libraries, layout issues, and accessibility\r\n\r\n- [Watch Paul Lewis as he builds the Chrome Dev Summit site][47] (He uses App Engine with Python, CSS, JS and HTML)\r\n\r\nSome of these notes are answers for Frequently Asked Questions (FAQs) but without the questions :P\r\n\r\nI hope you've enjoyed reading this post as much as I've enjoyed writing & updating it :)\r\n\r\n[6]: https://docs.python.org/2/download.html\r\n[7]: https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web\r\n[8]: https://www.udacity.com/course/intro-to-html-and-css--ud304\r\n[9]: https://cloud.google.com/appengine/docs/python/\r\n[10]: https://cloud.google.com/appengine/docs/python/download\r\n[11]: https://help.ubuntu.com/community/FilePermissions\r\n[12]: https://help.ubuntu.com/community/EnvironmentVariables\r\n[13]: https://cloud.google.com/free-trial/\r\n[14]: https://console.cloud.google.com/\r\n[15]: https://cloud.google.com/appengine/docs/python/getting-started/creating-guestbook\r\n[16]: http://jinja.pocoo.org/docs/2.9/\r\n[17]: https://cloud.google.com/appengine/docs/python/tools/uploadinganapp\r\n[18]: https://webapp2.readthedocs.io/en/latest/index.html\r\n[19]: https://webapp2.readthedocs.io/en/latest/api/webapp2.html#webapp2.Response\r\n[20]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type\r\n[21]: https://cloud.google.com/appengine/docs/python/datastore/modelclass\r\n[22]: https://cloud.google.com/appengine/docs/python/ndb\r\n[23]: https://cloud.google.com/appengine/docs/python/ndb/db_to_ndb\r\n[24]: https://cloud.google.com/appengine/docs/python/getting-started/storing-data-datastore#retrieving_submitted_greetings\r\n[25]: https://cloud.google.com/appengine/docs/python/ndb/queries\r\n[26]: https://cloud.google.com/appengine/docs/python/datastore/gqlreference\r\n[27]: https://classroom.udacity.com/courses/cs253/lessons/48198869/concepts/484038120923#\r\n[28]: https://classroom.udacity.com/courses/cs253/lessons/48725292/concepts/487342410923#\r\n[29]: https://discussions.udacity.com/t/problem-while-refreshing-ascii-blog-after-post/177504/2?u=badersur\r\n[30]: https://www.jetbrains.com/pycharm/download\r\n[31]: http://www.enkisoftware.com/devlogpost-20141231-1-Python_Google_App_Engine_debugging_with_PyCharm_CE.html\r\n[32]: https://code.visualstudio.com/\r\n[33]: https://marketplace.visualstudio.com/items?itemName=donjayamanne.python\r\n[34]: https://freegeoip.net/\r\n[35]: https://ipinfo.io/\r\n[36]: https://cloud.google.com/appengine/docs/python/how-requests-are-handled#x-appengine-citylatlong\r\n[37]: https://udacity-cs253.appspot.com/static/hw2.tgz\r\n[38]: https://udacity-cs253.appspot.com/static/hw3.tgz\r\n[39]: https://udacity-cs253.appspot.com/static/hw4.tgz\r\n[40]: https://udacity-cs253.appspot.com/static/hw5.tgz\r\n[41]: https://stackoverflow.com/questions/tagged/google-app-engine\r\n[42]: https://cloud.google.com/appengine/docs/python/config/appref\r\n[43]: https://webapp2.readthedocs.io/en/latest/guide/routing.html\r\n[44]: https://developers.google.com/web/\r\n[45]: https://developers.google.com/speed/pagespeed/insights/\r\n[46]: https://developer.microsoft.com/en-us/microsoft-edge/tools/staticscan/\r\n[47]: https://www.youtube.com/playlist?list=PLNYkxOF6rcIBykcJ7bvTpqU7vt-oey72J",
      "link": "resources-for-udacitys-web-development-course",
      "created": "2017-01-10T11:22:24",
      "url": "https://badersur-v2.appspot.com/blog/resources-for-udacitys-web-development-course",
      "author": "badersur",
      "id": 5741031244955648,
      "modified": "2017-01-10T12:52:07",
      "subject": "Helpful resources and notes for udacity's web development course"
    },
    {
      "content": "Hello readers and welcome to my new web application!\n\nIt has been a while since the last time I posted something to my WordPress blog. Currently, I have no intention to post a lot and my main purpose is to **[implement as much as I can][1]** and to **share my projects with you**.\n\nI may post about technical stuff (like implemented features or features I would like to implement) and my life :)\n\n[1]: /about",
      "link": "hello",
      "created": "2016-08-31T13:45:29",
      "url": "https://badersur-v2.appspot.com/blog/hello",
      "author": "badersur",
      "id": 5668600916475904,
      "modified": "2016-08-31T13:45:29",
      "subject": "Hello World!"
    }
  ]
}
