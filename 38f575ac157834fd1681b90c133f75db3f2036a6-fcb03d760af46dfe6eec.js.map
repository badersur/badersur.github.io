{"version":3,"sources":["webpack://badersur.github.io/./node_modules/commonmark/lib/node.js","webpack://badersur.github.io/./node_modules/commonmark/lib/from-code-point.js","webpack://badersur.github.io/./node_modules/commonmark/lib/common.js","webpack://badersur.github.io/./node_modules/commonmark/lib/inlines.js","webpack://badersur.github.io/./node_modules/commonmark/lib/blocks.js","webpack://badersur.github.io/./node_modules/commonmark/lib/render/renderer.js","webpack://badersur.github.io/./node_modules/commonmark/lib/render/html.js","webpack://badersur.github.io/./node_modules/commonmark/lib/render/xml.js","webpack://badersur.github.io/./node_modules/commonmark/node_modules/entities/lib/decode.js","webpack://badersur.github.io/./node_modules/commonmark/node_modules/entities/lib/decode_codepoint.js","webpack://badersur.github.io/./node_modules/commonmark/node_modules/entities/lib/encode.js","webpack://badersur.github.io/./node_modules/commonmark/node_modules/entities/lib/index.js","webpack://badersur.github.io/./node_modules/mdurl/encode.js","webpack://badersur.github.io/./node_modules/string.prototype.repeat/repeat.js"],"names":["isContainer","node","_type","resumeAt","entering","this","current","next","cur","container","_firstChild","root","_next","_parent","NodeWalker","Node","nodeType","sourcepos","_lastChild","_prev","_sourcepos","_lastLineBlank","_lastLineChecked","_open","_string_content","_literal","_listData","_info","_destination","_title","_isFenced","_fenceChar","_fenceLength","_fenceOffset","_level","_onEnter","_onExit","proto","prototype","Object","defineProperty","get","set","s","type","t","tight","start","n","delimiter","delim","appendChild","child","unlink","prependChild","insertAfter","sibling","insertBefore","walker","_fromCodePoint","ENTITY","TAGNAME","OPENTAG","CLOSETAG","reHtmlTag","RegExp","reBackslashOrAmp","ESCAPABLE","reEntityOrEscapedChar","reXmlSpecial","unescapeChar","charCodeAt","charAt","unescapeString","test","replace","replaceUnsafeChar","escapeXml","fromCodePoint","_","String","e","RangeError","fromCharCode","stringFromCharCode","floor","Math","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","length","arguments","result","codePoint","Number","isFinite","push","apply","uri","err","C_SINGLEQUOTE","C_DOUBLEQUOTE","ESCAPED_CHAR","rePunctuation","reLinkTitle","reLinkDestinationBraces","reEscapable","reEntityHere","reTicks","reTicksHere","reEllipses","reDash","reEmailAutolink","reAutolink","reSpnl","reWhitespaceChar","reUnicodeWhitespaceChar","reFinalSpace","reInitialSpace","reSpaceAtEndOfLine","reLinkLabel","reMain","normalizeReference","string","slice","trim","toLowerCase","toUpperCase","match","re","m","exec","subject","pos","peek","spnl","parseBackticks","block","ticks","matched","contents","afterOpenTicks","parseBackslash","subj","parseAutolink","dest","parseHtmlTag","scanDelims","cc","char_before","char_after","cc_after","left_flanking","right_flanking","can_open","can_close","after_is_whitespace","after_is_punctuation","before_is_whitespace","before_is_punctuation","numdelims","startpos","handleDelim","res","options","smart","delimiters","origdelims","previous","removeDelimiter","processEmphasis","stack_bottom","opener","closer","old_closer","opener_inl","closer_inl","tempstack","use_delims","tmp","opener_found","bottom","top","openers_bottom","odd_match","i","closercc","emph","literal","parseLinkTitle","title","substr","parseLinkDestination","c","savepos","openparens","parseLinkLabel","parseOpenBracket","addBracket","parseBang","parseCloseBracket","is_image","reflabel","brackets","active","removeBracket","image","beforelabel","bracketAfter","link","refmap","destination","previousDelimiter","parseEntity","parseString","chars","enCount","emCount","repeat","parseNewline","lastc","hardbreak","parseReference","rawlabel","matchChars","beforetitle","atLineEnd","normlabel","parseInline","parseInlines","parse","reHtmlBlockOpen","reHtmlBlockClose","reThematicBreak","reMaybeSpecial","reNonSpace","reBulletListMarker","reOrderedListMarker","reATXHeadingMarker","reCodeFence","reClosingCodeFence","reSetextHeadingLine","reLineEnding","isSpaceOrTab","ln","endsWithBlankLine","addLine","partiallyConsumedTab","offset","charsToTab","column","tip","currentLine","addChild","tag","blocks","canContain","finalize","lineNumber","column_number","newBlock","closeUnmatchedBlocks","allClosed","oldtip","lastMatchedContainer","parent","document","continue","acceptsLines","list","parser","item","subitem","block_quote","indented","nextNonspace","advanceNextNonspace","advanceOffset","blank","indent","markerOffset","padding","heading","thematic_break","code_block","lastLineLength","content","newlinePos","indexOf","firstLine","rest","info","html_block","_htmlBlockType","paragraph","hasReferenceDefs","inlineParser","blockStarts","level","fenceLength","blockType","data","list_data","item_data","nextc","spacesStartCol","spacesStartOffset","bulletChar","parseInt","blank_item","spaces_after_marker","parseListMarker","count","columns","charsToAdvance","nextNonspaceColumn","findNextNonspace","cols","incorporateLine","lastChild","all_matched","doc","matchedLeaf","starts","startsLen","lastLineBlank","cont","above","processInlines","event","Document","input","time","console","lines","split","len","timeEnd","Renderer","render","ast","buffer","lastOut","out","str","lit","cr","esc","reUnsafeProtocol","reSafeDataProtocol","potentiallyUnsafe","url","HtmlRenderer","softbreak","disableTags","create","text","html_inline","safe","linebreak","attrs","strong","grandparent","listTight","tagname","code","info_words","listType","listStart","toString","custom_inline","onEnter","onExit","custom_block","name","selfclosing","attrib","undefined","att","reXMLTag","XmlRenderer","indentLevel","selfClosing","nodetype","listDelimiter","delimword","__importDefault","mod","__esModule","exports","value","decodeHTML","decodeHTMLStrict","decodeXML","entities_json_1","legacy_json_1","xml_json_1","decode_codepoint_1","getStrictDecoder","map","keys","join","getReplacer","default","sorter","a","b","secondChar","legacy","sort","j","replacer","decode_json_1","output","escape","encodeHTML","encodeXML","inverseXML","getInverseObj","xmlReplacer","getInverseReplacer","getInverse","inverseHTML","htmlReplacer","obj","reduce","inverse","single","multiple","_i","_a","k","end","splice","unshift","reNonASCII","singleCharReplacer","codePointAt","reXmlChars","decode_1","encode_1","encode_2","decode_2","enumerable","encodeCache","encode","exclude","keepEscaped","l","nextCode","cache","defaultChars","ch","getEncodeCache","encodeURIComponent","componentChars","module","object","$defineProperty","error","TypeError","Infinity"],"mappings":"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","file":"38f575ac157834fd1681b90c133f75db3f2036a6-fcb03d760af46dfe6eec.js","sourcesContent":["\"use strict\";\n\nfunction isContainer(node) {\n  switch (node._type) {\n    case \"document\":\n    case \"block_quote\":\n    case \"list\":\n    case \"item\":\n    case \"paragraph\":\n    case \"heading\":\n    case \"emph\":\n    case \"strong\":\n    case \"link\":\n    case \"image\":\n    case \"custom_inline\":\n    case \"custom_block\":\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nvar resumeAt = function resumeAt(node, entering) {\n  this.current = node;\n  this.entering = entering === true;\n};\n\nvar next = function next() {\n  var cur = this.current;\n  var entering = this.entering;\n\n  if (cur === null) {\n    return null;\n  }\n\n  var container = isContainer(cur);\n\n  if (entering && container) {\n    if (cur._firstChild) {\n      this.current = cur._firstChild;\n      this.entering = true;\n    } else {\n      // stay on node but exit\n      this.entering = false;\n    }\n  } else if (cur === this.root) {\n    this.current = null;\n  } else if (cur._next === null) {\n    this.current = cur._parent;\n    this.entering = false;\n  } else {\n    this.current = cur._next;\n    this.entering = true;\n  }\n\n  return {\n    entering: entering,\n    node: cur\n  };\n};\n\nvar NodeWalker = function NodeWalker(root) {\n  return {\n    current: root,\n    root: root,\n    entering: true,\n    next: next,\n    resumeAt: resumeAt\n  };\n};\n\nvar Node = function Node(nodeType, sourcepos) {\n  this._type = nodeType;\n  this._parent = null;\n  this._firstChild = null;\n  this._lastChild = null;\n  this._prev = null;\n  this._next = null;\n  this._sourcepos = sourcepos;\n  this._lastLineBlank = false;\n  this._lastLineChecked = false;\n  this._open = true;\n  this._string_content = null;\n  this._literal = null;\n  this._listData = {};\n  this._info = null;\n  this._destination = null;\n  this._title = null;\n  this._isFenced = false;\n  this._fenceChar = null;\n  this._fenceLength = 0;\n  this._fenceOffset = null;\n  this._level = null;\n  this._onEnter = null;\n  this._onExit = null;\n};\n\nvar proto = Node.prototype;\nObject.defineProperty(proto, \"isContainer\", {\n  get: function get() {\n    return isContainer(this);\n  }\n});\nObject.defineProperty(proto, \"type\", {\n  get: function get() {\n    return this._type;\n  }\n});\nObject.defineProperty(proto, \"firstChild\", {\n  get: function get() {\n    return this._firstChild;\n  }\n});\nObject.defineProperty(proto, \"lastChild\", {\n  get: function get() {\n    return this._lastChild;\n  }\n});\nObject.defineProperty(proto, \"next\", {\n  get: function get() {\n    return this._next;\n  }\n});\nObject.defineProperty(proto, \"prev\", {\n  get: function get() {\n    return this._prev;\n  }\n});\nObject.defineProperty(proto, \"parent\", {\n  get: function get() {\n    return this._parent;\n  }\n});\nObject.defineProperty(proto, \"sourcepos\", {\n  get: function get() {\n    return this._sourcepos;\n  }\n});\nObject.defineProperty(proto, \"literal\", {\n  get: function get() {\n    return this._literal;\n  },\n  set: function set(s) {\n    this._literal = s;\n  }\n});\nObject.defineProperty(proto, \"destination\", {\n  get: function get() {\n    return this._destination;\n  },\n  set: function set(s) {\n    this._destination = s;\n  }\n});\nObject.defineProperty(proto, \"title\", {\n  get: function get() {\n    return this._title;\n  },\n  set: function set(s) {\n    this._title = s;\n  }\n});\nObject.defineProperty(proto, \"info\", {\n  get: function get() {\n    return this._info;\n  },\n  set: function set(s) {\n    this._info = s;\n  }\n});\nObject.defineProperty(proto, \"level\", {\n  get: function get() {\n    return this._level;\n  },\n  set: function set(s) {\n    this._level = s;\n  }\n});\nObject.defineProperty(proto, \"listType\", {\n  get: function get() {\n    return this._listData.type;\n  },\n  set: function set(t) {\n    this._listData.type = t;\n  }\n});\nObject.defineProperty(proto, \"listTight\", {\n  get: function get() {\n    return this._listData.tight;\n  },\n  set: function set(t) {\n    this._listData.tight = t;\n  }\n});\nObject.defineProperty(proto, \"listStart\", {\n  get: function get() {\n    return this._listData.start;\n  },\n  set: function set(n) {\n    this._listData.start = n;\n  }\n});\nObject.defineProperty(proto, \"listDelimiter\", {\n  get: function get() {\n    return this._listData.delimiter;\n  },\n  set: function set(delim) {\n    this._listData.delimiter = delim;\n  }\n});\nObject.defineProperty(proto, \"onEnter\", {\n  get: function get() {\n    return this._onEnter;\n  },\n  set: function set(s) {\n    this._onEnter = s;\n  }\n});\nObject.defineProperty(proto, \"onExit\", {\n  get: function get() {\n    return this._onExit;\n  },\n  set: function set(s) {\n    this._onExit = s;\n  }\n});\n\nNode.prototype.appendChild = function (child) {\n  child.unlink();\n  child._parent = this;\n\n  if (this._lastChild) {\n    this._lastChild._next = child;\n    child._prev = this._lastChild;\n    this._lastChild = child;\n  } else {\n    this._firstChild = child;\n    this._lastChild = child;\n  }\n};\n\nNode.prototype.prependChild = function (child) {\n  child.unlink();\n  child._parent = this;\n\n  if (this._firstChild) {\n    this._firstChild._prev = child;\n    child._next = this._firstChild;\n    this._firstChild = child;\n  } else {\n    this._firstChild = child;\n    this._lastChild = child;\n  }\n};\n\nNode.prototype.unlink = function () {\n  if (this._prev) {\n    this._prev._next = this._next;\n  } else if (this._parent) {\n    this._parent._firstChild = this._next;\n  }\n\n  if (this._next) {\n    this._next._prev = this._prev;\n  } else if (this._parent) {\n    this._parent._lastChild = this._prev;\n  }\n\n  this._parent = null;\n  this._next = null;\n  this._prev = null;\n};\n\nNode.prototype.insertAfter = function (sibling) {\n  sibling.unlink();\n  sibling._next = this._next;\n\n  if (sibling._next) {\n    sibling._next._prev = sibling;\n  }\n\n  sibling._prev = this;\n  this._next = sibling;\n  sibling._parent = this._parent;\n\n  if (!sibling._next) {\n    sibling._parent._lastChild = sibling;\n  }\n};\n\nNode.prototype.insertBefore = function (sibling) {\n  sibling.unlink();\n  sibling._prev = this._prev;\n\n  if (sibling._prev) {\n    sibling._prev._next = sibling;\n  }\n\n  sibling._next = this;\n  this._prev = sibling;\n  sibling._parent = this._parent;\n\n  if (!sibling._prev) {\n    sibling._parent._firstChild = sibling;\n  }\n};\n\nNode.prototype.walker = function () {\n  var walker = new NodeWalker(this);\n  return walker;\n};\n\nexport default Node;\n/* Example of use of walker:\n\n var walker = w.walker();\n var event;\n\n while (event = walker.next()) {\n console.log(event.entering, event.node.type);\n }\n\n */","\"use strict\"; // derived from https://github.com/mathiasbynens/String.fromCodePoint\n\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\n\nvar _fromCodePoint;\n\nexport default function fromCodePoint(_) {\n  return _fromCodePoint(_);\n}\n\nif (String.fromCodePoint) {\n  _fromCodePoint = function _fromCodePoint(_) {\n    try {\n      return String.fromCodePoint(_);\n    } catch (e) {\n      if (e instanceof RangeError) {\n        return String.fromCharCode(0xfffd);\n      }\n\n      throw e;\n    }\n  };\n} else {\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n\n  _fromCodePoint = function _fromCodePoint() {\n    var MAX_SIZE = 0x4000;\n    var codeUnits = [];\n    var highSurrogate;\n    var lowSurrogate;\n    var index = -1;\n    var length = arguments.length;\n\n    if (!length) {\n      return \"\";\n    }\n\n    var result = \"\";\n\n    while (++index < length) {\n      var codePoint = Number(arguments[index]);\n\n      if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n      codePoint < 0 || // not a valid Unicode code point\n      codePoint > 0x10ffff || // not a valid Unicode code point\n      floor(codePoint) !== codePoint // not an integer\n      ) {\n          return String.fromCharCode(0xfffd);\n        }\n\n      if (codePoint <= 0xffff) {\n        // BMP code point\n        codeUnits.push(codePoint);\n      } else {\n        // Astral code point; split in surrogate halves\n        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        codePoint -= 0x10000;\n        highSurrogate = (codePoint >> 10) + 0xd800;\n        lowSurrogate = codePoint % 0x400 + 0xdc00;\n        codeUnits.push(highSurrogate, lowSurrogate);\n      }\n\n      if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n        result += stringFromCharCode.apply(null, codeUnits);\n        codeUnits.length = 0;\n      }\n    }\n\n    return result;\n  };\n}","\"use strict\";\n\nimport encode from \"mdurl/encode.js\";\nimport { decodeHTML } from \"entities\";\nvar C_BACKSLASH = 92;\nvar ENTITY = \"&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});\";\nvar TAGNAME = \"[A-Za-z][A-Za-z0-9-]*\";\nvar ATTRIBUTENAME = \"[a-zA-Z_:][a-zA-Z0-9:._-]*\";\nvar UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE = \"(?:\" + UNQUOTEDVALUE + \"|\" + SINGLEQUOTEDVALUE + \"|\" + DOUBLEQUOTEDVALUE + \")\";\nvar ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\nvar PROCESSINGINSTRUCTION = \"[<][?][\\\\s\\\\S]*?[?][>]\";\nvar DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\nvar CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\nvar HTMLTAG = \"(?:\" + OPENTAG + \"|\" + CLOSETAG + \"|\" + HTMLCOMMENT + \"|\" + PROCESSINGINSTRUCTION + \"|\" + DECLARATION + \"|\" + CDATA + \")\";\nvar reHtmlTag = new RegExp(\"^\" + HTMLTAG);\nvar reBackslashOrAmp = /[\\\\&]/;\nvar ESCAPABLE = \"[!\\\"#$%&'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]\";\nvar reEntityOrEscapedChar = new RegExp(\"\\\\\\\\\" + ESCAPABLE + \"|\" + ENTITY, \"gi\");\nvar XMLSPECIAL = '[&<>\"]';\nvar reXmlSpecial = new RegExp(XMLSPECIAL, \"g\");\n\nvar unescapeChar = function unescapeChar(s) {\n  if (s.charCodeAt(0) === C_BACKSLASH) {\n    return s.charAt(1);\n  } else {\n    return decodeHTML(s);\n  }\n}; // Replace entities and backslash escapes with literal characters.\n\n\nvar unescapeString = function unescapeString(s) {\n  if (reBackslashOrAmp.test(s)) {\n    return s.replace(reEntityOrEscapedChar, unescapeChar);\n  } else {\n    return s;\n  }\n};\n\nvar normalizeURI = function normalizeURI(uri) {\n  try {\n    return encode(uri);\n  } catch (err) {\n    return uri;\n  }\n};\n\nvar replaceUnsafeChar = function replaceUnsafeChar(s) {\n  switch (s) {\n    case \"&\":\n      return \"&amp;\";\n\n    case \"<\":\n      return \"&lt;\";\n\n    case \">\":\n      return \"&gt;\";\n\n    case '\"':\n      return \"&quot;\";\n\n    default:\n      return s;\n  }\n};\n\nvar escapeXml = function escapeXml(s) {\n  if (reXmlSpecial.test(s)) {\n    return s.replace(reXmlSpecial, replaceUnsafeChar);\n  } else {\n    return s;\n  }\n};\n\nexport { unescapeString, normalizeURI, escapeXml, reHtmlTag, OPENTAG, CLOSETAG, ENTITY, ESCAPABLE };","\"use strict\";\n\nimport Node from \"./node.js\";\nimport * as common from \"./common.js\";\nimport fromCodePoint from \"./from-code-point.js\";\nimport { decodeHTML } from \"entities\";\nimport \"string.prototype.repeat\"; // Polyfill for String.prototype.repeat\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString; // Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34; // Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = \"\\\\\\\\\" + ESCAPABLE;\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\nvar rePunctuation = new RegExp(/[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/);\nvar reLinkTitle = new RegExp('^(?:\"(' + ESCAPED_CHAR + '|[^\"\\\\x00])*\"' + \"|\" + \"'(\" + ESCAPED_CHAR + \"|[^'\\\\x00])*'\" + \"|\" + \"\\\\((\" + ESCAPED_CHAR + \"|[^()\\\\x00])*\\\\))\");\nvar reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\nvar reEscapable = new RegExp(\"^\" + ESCAPABLE);\nvar reEntityHere = new RegExp(\"^\" + ENTITY, \"i\");\nvar reTicks = /`+/;\nvar reTicksHere = /^`+/;\nvar reEllipses = /\\.\\.\\./g;\nvar reDash = /--+/g;\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\nvar reSpnl = /^ *(?:\\n *)?/;\nvar reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\nvar reUnicodeWhitespaceChar = /^\\s/;\nvar reFinalSpace = / *$/;\nvar reInitialSpace = /^ */;\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/; // Matches a string of non-special characters.\n\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function text(s) {\n  var node = new Node(\"text\");\n  node._literal = s;\n  return node;\n}; // normalize a reference in reference link (remove []s, trim,\n// collapse internal space, unicode case fold.\n// See commonmark/commonmark.js#168.\n\n\nvar normalizeReference = function normalizeReference(string) {\n  return string.slice(1, string.length - 1).trim().replace(/[ \\t\\r\\n]+/, \" \").toLowerCase().toUpperCase();\n}; // INLINE PARSER\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\n\n\nvar match = function match(re) {\n  var m = re.exec(this.subject.slice(this.pos));\n\n  if (m === null) {\n    return null;\n  } else {\n    this.pos += m.index + m[0].length;\n    return m[0];\n  }\n}; // Returns the code for the character at the current subject position, or -1\n// there are no more characters.\n\n\nvar peek = function peek() {\n  if (this.pos < this.subject.length) {\n    return this.subject.charCodeAt(this.pos);\n  } else {\n    return -1;\n  }\n}; // Parse zero or more space characters, including at most one newline\n\n\nvar spnl = function spnl() {\n  this.match(reSpnl);\n  return true;\n}; // All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\n\n\nvar parseBackticks = function parseBackticks(block) {\n  var ticks = this.match(reTicksHere);\n\n  if (ticks === null) {\n    return false;\n  }\n\n  var afterOpenTicks = this.pos;\n  var matched;\n  var node;\n  var contents;\n\n  while ((matched = this.match(reTicks)) !== null) {\n    if (matched === ticks) {\n      node = new Node(\"code\");\n      contents = this.subject.slice(afterOpenTicks, this.pos - ticks.length).replace(/\\n/gm, \" \");\n\n      if (contents.length > 0 && contents.match(/[^ ]/) !== null && contents[0] == \" \" && contents[contents.length - 1] == \" \") {\n        node._literal = contents.slice(1, contents.length - 1);\n      } else {\n        node._literal = contents;\n      }\n\n      block.appendChild(node);\n      return true;\n    }\n  } // If we got here, we didn't match a closing backtick sequence.\n\n\n  this.pos = afterOpenTicks;\n  block.appendChild(text(ticks));\n  return true;\n}; // Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\n\n\nvar parseBackslash = function parseBackslash(block) {\n  var subj = this.subject;\n  var node;\n  this.pos += 1;\n\n  if (this.peek() === C_NEWLINE) {\n    this.pos += 1;\n    node = new Node(\"linebreak\");\n    block.appendChild(node);\n  } else if (reEscapable.test(subj.charAt(this.pos))) {\n    block.appendChild(text(subj.charAt(this.pos)));\n    this.pos += 1;\n  } else {\n    block.appendChild(text(\"\\\\\"));\n  }\n\n  return true;\n}; // Attempt to parse an autolink (URL or email in pointy brackets).\n\n\nvar parseAutolink = function parseAutolink(block) {\n  var m;\n  var dest;\n  var node;\n\n  if (m = this.match(reEmailAutolink)) {\n    dest = m.slice(1, m.length - 1);\n    node = new Node(\"link\");\n    node._destination = normalizeURI(\"mailto:\" + dest);\n    node._title = \"\";\n    node.appendChild(text(dest));\n    block.appendChild(node);\n    return true;\n  } else if (m = this.match(reAutolink)) {\n    dest = m.slice(1, m.length - 1);\n    node = new Node(\"link\");\n    node._destination = normalizeURI(dest);\n    node._title = \"\";\n    node.appendChild(text(dest));\n    block.appendChild(node);\n    return true;\n  } else {\n    return false;\n  }\n}; // Attempt to parse a raw HTML tag.\n\n\nvar parseHtmlTag = function parseHtmlTag(block) {\n  var m = this.match(reHtmlTag);\n\n  if (m === null) {\n    return false;\n  } else {\n    var node = new Node(\"html_inline\");\n    node._literal = m;\n    block.appendChild(node);\n    return true;\n  }\n}; // Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\n\n\nvar scanDelims = function scanDelims(cc) {\n  var numdelims = 0;\n  var char_before, char_after, cc_after;\n  var startpos = this.pos;\n  var left_flanking, right_flanking, can_open, can_close;\n  var after_is_whitespace, after_is_punctuation, before_is_whitespace, before_is_punctuation;\n\n  if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n    numdelims++;\n    this.pos++;\n  } else {\n    while (this.peek() === cc) {\n      numdelims++;\n      this.pos++;\n    }\n  }\n\n  if (numdelims === 0) {\n    return null;\n  }\n\n  char_before = startpos === 0 ? \"\\n\" : this.subject.charAt(startpos - 1);\n  cc_after = this.peek();\n\n  if (cc_after === -1) {\n    char_after = \"\\n\";\n  } else {\n    char_after = fromCodePoint(cc_after);\n  }\n\n  after_is_whitespace = reUnicodeWhitespaceChar.test(char_after);\n  after_is_punctuation = rePunctuation.test(char_after);\n  before_is_whitespace = reUnicodeWhitespaceChar.test(char_before);\n  before_is_punctuation = rePunctuation.test(char_before);\n  left_flanking = !after_is_whitespace && (!after_is_punctuation || before_is_whitespace || before_is_punctuation);\n  right_flanking = !before_is_whitespace && (!before_is_punctuation || after_is_whitespace || after_is_punctuation);\n\n  if (cc === C_UNDERSCORE) {\n    can_open = left_flanking && (!right_flanking || before_is_punctuation);\n    can_close = right_flanking && (!left_flanking || after_is_punctuation);\n  } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n    can_open = left_flanking && !right_flanking;\n    can_close = right_flanking;\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  this.pos = startpos;\n  return {\n    numdelims: numdelims,\n    can_open: can_open,\n    can_close: can_close\n  };\n}; // Handle a delimiter marker for emphasis or a quote.\n\n\nvar handleDelim = function handleDelim(cc, block) {\n  var res = this.scanDelims(cc);\n\n  if (!res) {\n    return false;\n  }\n\n  var numdelims = res.numdelims;\n  var startpos = this.pos;\n  var contents;\n  this.pos += numdelims;\n\n  if (cc === C_SINGLEQUOTE) {\n    contents = \"\\u2019\";\n  } else if (cc === C_DOUBLEQUOTE) {\n    contents = \"\\u201C\";\n  } else {\n    contents = this.subject.slice(startpos, this.pos);\n  }\n\n  var node = text(contents);\n  block.appendChild(node); // Add entry to stack for this opener\n\n  if ((res.can_open || res.can_close) && (this.options.smart || cc !== C_SINGLEQUOTE && cc !== C_DOUBLEQUOTE)) {\n    this.delimiters = {\n      cc: cc,\n      numdelims: numdelims,\n      origdelims: numdelims,\n      node: node,\n      previous: this.delimiters,\n      next: null,\n      can_open: res.can_open,\n      can_close: res.can_close\n    };\n\n    if (this.delimiters.previous !== null) {\n      this.delimiters.previous.next = this.delimiters;\n    }\n  }\n\n  return true;\n};\n\nvar removeDelimiter = function removeDelimiter(delim) {\n  if (delim.previous !== null) {\n    delim.previous.next = delim.next;\n  }\n\n  if (delim.next === null) {\n    // top of stack\n    this.delimiters = delim.previous;\n  } else {\n    delim.next.previous = delim.previous;\n  }\n};\n\nvar removeDelimitersBetween = function removeDelimitersBetween(bottom, top) {\n  if (bottom.next !== top) {\n    bottom.next = top;\n    top.previous = bottom;\n  }\n};\n\nvar processEmphasis = function processEmphasis(stack_bottom) {\n  var opener, closer, old_closer;\n  var opener_inl, closer_inl;\n  var tempstack;\n  var use_delims;\n  var tmp, next;\n  var opener_found;\n  var openers_bottom = [[], [], []];\n  var odd_match = false;\n\n  for (var i = 0; i < 3; i++) {\n    openers_bottom[i][C_UNDERSCORE] = stack_bottom;\n    openers_bottom[i][C_ASTERISK] = stack_bottom;\n    openers_bottom[i][C_SINGLEQUOTE] = stack_bottom;\n    openers_bottom[i][C_DOUBLEQUOTE] = stack_bottom;\n  } // find first closer above stack_bottom:\n\n\n  closer = this.delimiters;\n\n  while (closer !== null && closer.previous !== stack_bottom) {\n    closer = closer.previous;\n  } // move forward, looking for closers, and handling each\n\n\n  while (closer !== null) {\n    var closercc = closer.cc;\n\n    if (!closer.can_close) {\n      closer = closer.next;\n    } else {\n      // found emphasis closer. now look back for first matching opener:\n      opener = closer.previous;\n      opener_found = false;\n\n      while (opener !== null && opener !== stack_bottom && opener !== openers_bottom[closer.origdelims % 3][closercc]) {\n        odd_match = (closer.can_open || opener.can_close) && closer.origdelims % 3 !== 0 && (opener.origdelims + closer.origdelims) % 3 === 0;\n\n        if (opener.cc === closer.cc && opener.can_open && !odd_match) {\n          opener_found = true;\n          break;\n        }\n\n        opener = opener.previous;\n      }\n\n      old_closer = closer;\n\n      if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n        if (!opener_found) {\n          closer = closer.next;\n        } else {\n          // calculate actual number of delimiters used from closer\n          use_delims = closer.numdelims >= 2 && opener.numdelims >= 2 ? 2 : 1;\n          opener_inl = opener.node;\n          closer_inl = closer.node; // remove used delimiters from stack elts and inlines\n\n          opener.numdelims -= use_delims;\n          closer.numdelims -= use_delims;\n          opener_inl._literal = opener_inl._literal.slice(0, opener_inl._literal.length - use_delims);\n          closer_inl._literal = closer_inl._literal.slice(0, closer_inl._literal.length - use_delims); // build contents for new emph element\n\n          var emph = new Node(use_delims === 1 ? \"emph\" : \"strong\");\n          tmp = opener_inl._next;\n\n          while (tmp && tmp !== closer_inl) {\n            next = tmp._next;\n            tmp.unlink();\n            emph.appendChild(tmp);\n            tmp = next;\n          }\n\n          opener_inl.insertAfter(emph); // remove elts between opener and closer in delimiters stack\n\n          removeDelimitersBetween(opener, closer); // if opener has 0 delims, remove it and the inline\n\n          if (opener.numdelims === 0) {\n            opener_inl.unlink();\n            this.removeDelimiter(opener);\n          }\n\n          if (closer.numdelims === 0) {\n            closer_inl.unlink();\n            tempstack = closer.next;\n            this.removeDelimiter(closer);\n            closer = tempstack;\n          }\n        }\n      } else if (closercc === C_SINGLEQUOTE) {\n        closer.node._literal = \"\\u2019\";\n\n        if (opener_found) {\n          opener.node._literal = \"\\u2018\";\n        }\n\n        closer = closer.next;\n      } else if (closercc === C_DOUBLEQUOTE) {\n        closer.node._literal = \"\\u201D\";\n\n        if (opener_found) {\n          opener.node.literal = \"\\u201C\";\n        }\n\n        closer = closer.next;\n      }\n\n      if (!opener_found) {\n        // Set lower bound for future searches for openers:\n        openers_bottom[old_closer.origdelims % 3][closercc] = old_closer.previous;\n\n        if (!old_closer.can_open) {\n          // We can remove a closer that can't be an opener,\n          // once we've seen there's no matching opener:\n          this.removeDelimiter(old_closer);\n        }\n      }\n    }\n  } // remove all delimiters\n\n\n  while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n    this.removeDelimiter(this.delimiters);\n  }\n}; // Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\n\n\nvar parseLinkTitle = function parseLinkTitle() {\n  var title = this.match(reLinkTitle);\n\n  if (title === null) {\n    return null;\n  } else {\n    // chop off quotes from title and unescape:\n    return unescapeString(title.substr(1, title.length - 2));\n  }\n}; // Attempt to parse link destination, returning the string or\n// null if no match.\n\n\nvar parseLinkDestination = function parseLinkDestination() {\n  var res = this.match(reLinkDestinationBraces);\n\n  if (res === null) {\n    if (this.peek() === C_LESSTHAN) {\n      return null;\n    } // TODO handrolled parser; res should be null or the string\n\n\n    var savepos = this.pos;\n    var openparens = 0;\n    var c;\n\n    while ((c = this.peek()) !== -1) {\n      if (c === C_BACKSLASH && reEscapable.test(this.subject.charAt(this.pos + 1))) {\n        this.pos += 1;\n\n        if (this.peek() !== -1) {\n          this.pos += 1;\n        }\n      } else if (c === C_OPEN_PAREN) {\n        this.pos += 1;\n        openparens += 1;\n      } else if (c === C_CLOSE_PAREN) {\n        if (openparens < 1) {\n          break;\n        } else {\n          this.pos += 1;\n          openparens -= 1;\n        }\n      } else if (reWhitespaceChar.exec(fromCodePoint(c)) !== null) {\n        break;\n      } else {\n        this.pos += 1;\n      }\n    }\n\n    if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n      return null;\n    }\n\n    if (openparens !== 0) {\n      return null;\n    }\n\n    res = this.subject.substr(savepos, this.pos - savepos);\n    return normalizeURI(unescapeString(res));\n  } else {\n    // chop off surrounding <..>:\n    return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n  }\n}; // Attempt to parse a link label, returning number of characters parsed.\n\n\nvar parseLinkLabel = function parseLinkLabel() {\n  var m = this.match(reLinkLabel);\n\n  if (m === null || m.length > 1001) {\n    return 0;\n  } else {\n    return m.length;\n  }\n}; // Add open bracket to delimiter stack and add a text node to block's children.\n\n\nvar parseOpenBracket = function parseOpenBracket(block) {\n  var startpos = this.pos;\n  this.pos += 1;\n  var node = text(\"[\");\n  block.appendChild(node); // Add entry to stack for this opener\n\n  this.addBracket(node, startpos, false);\n  return true;\n}; // IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\n\n\nvar parseBang = function parseBang(block) {\n  var startpos = this.pos;\n  this.pos += 1;\n\n  if (this.peek() === C_OPEN_BRACKET) {\n    this.pos += 1;\n    var node = text(\"![\");\n    block.appendChild(node); // Add entry to stack for this opener\n\n    this.addBracket(node, startpos + 1, true);\n  } else {\n    block.appendChild(text(\"!\"));\n  }\n\n  return true;\n}; // Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\n\n\nvar parseCloseBracket = function parseCloseBracket(block) {\n  var startpos;\n  var is_image;\n  var dest;\n  var title;\n  var matched = false;\n  var reflabel;\n  var opener;\n  this.pos += 1;\n  startpos = this.pos; // get last [ or ![\n\n  opener = this.brackets;\n\n  if (opener === null) {\n    // no matched opener, just return a literal\n    block.appendChild(text(\"]\"));\n    return true;\n  }\n\n  if (!opener.active) {\n    // no matched opener, just return a literal\n    block.appendChild(text(\"]\")); // take opener off brackets stack\n\n    this.removeBracket();\n    return true;\n  } // If we got here, open is a potential opener\n\n\n  is_image = opener.image; // Check to see if we have a link/image\n\n  var savepos = this.pos; // Inline link?\n\n  if (this.peek() === C_OPEN_PAREN) {\n    this.pos++;\n\n    if (this.spnl() && (dest = this.parseLinkDestination()) !== null && this.spnl() && ( // make sure there's a space before the title:\n    reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) && (title = this.parseLinkTitle()) || true) && this.spnl() && this.peek() === C_CLOSE_PAREN) {\n      this.pos += 1;\n      matched = true;\n    } else {\n      this.pos = savepos;\n    }\n  }\n\n  if (!matched) {\n    // Next, see if there's a link label\n    var beforelabel = this.pos;\n    var n = this.parseLinkLabel();\n\n    if (n > 2) {\n      reflabel = this.subject.slice(beforelabel, beforelabel + n);\n    } else if (!opener.bracketAfter) {\n      // Empty or missing second label means to use the first label as the reference.\n      // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n      reflabel = this.subject.slice(opener.index, startpos);\n    }\n\n    if (n === 0) {\n      // If shortcut reference link, rewind before spaces we skipped.\n      this.pos = savepos;\n    }\n\n    if (reflabel) {\n      // lookup rawlabel in refmap\n      var link = this.refmap[normalizeReference(reflabel)];\n\n      if (link) {\n        dest = link.destination;\n        title = link.title;\n        matched = true;\n      }\n    }\n  }\n\n  if (matched) {\n    var node = new Node(is_image ? \"image\" : \"link\");\n    node._destination = dest;\n    node._title = title || \"\";\n    var tmp, next;\n    tmp = opener.node._next;\n\n    while (tmp) {\n      next = tmp._next;\n      tmp.unlink();\n      node.appendChild(tmp);\n      tmp = next;\n    }\n\n    block.appendChild(node);\n    this.processEmphasis(opener.previousDelimiter);\n    this.removeBracket();\n    opener.node.unlink(); // We remove this bracket and processEmphasis will remove later delimiters.\n    // Now, for a link, we also deactivate earlier link openers.\n    // (no links in links)\n\n    if (!is_image) {\n      opener = this.brackets;\n\n      while (opener !== null) {\n        if (!opener.image) {\n          opener.active = false; // deactivate this opener\n        }\n\n        opener = opener.previous;\n      }\n    }\n\n    return true;\n  } else {\n    // no match\n    this.removeBracket(); // remove this opener from stack\n\n    this.pos = startpos;\n    block.appendChild(text(\"]\"));\n    return true;\n  }\n};\n\nvar addBracket = function addBracket(node, index, image) {\n  if (this.brackets !== null) {\n    this.brackets.bracketAfter = true;\n  }\n\n  this.brackets = {\n    node: node,\n    previous: this.brackets,\n    previousDelimiter: this.delimiters,\n    index: index,\n    image: image,\n    active: true\n  };\n};\n\nvar removeBracket = function removeBracket() {\n  this.brackets = this.brackets.previous;\n}; // Attempt to parse an entity.\n\n\nvar parseEntity = function parseEntity(block) {\n  var m;\n\n  if (m = this.match(reEntityHere)) {\n    block.appendChild(text(decodeHTML(m)));\n    return true;\n  } else {\n    return false;\n  }\n}; // Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\n\n\nvar parseString = function parseString(block) {\n  var m;\n\n  if (m = this.match(reMain)) {\n    if (this.options.smart) {\n      block.appendChild(text(m.replace(reEllipses, \"\\u2026\").replace(reDash, function (chars) {\n        var enCount = 0;\n        var emCount = 0;\n\n        if (chars.length % 3 === 0) {\n          // If divisible by 3, use all em dashes\n          emCount = chars.length / 3;\n        } else if (chars.length % 2 === 0) {\n          // If divisible by 2, use all en dashes\n          enCount = chars.length / 2;\n        } else if (chars.length % 3 === 2) {\n          // If 2 extra dashes, use en dash for last 2; em dashes for rest\n          enCount = 1;\n          emCount = (chars.length - 2) / 3;\n        } else {\n          // Use en dashes for last 4 hyphens; em dashes for rest\n          enCount = 2;\n          emCount = (chars.length - 4) / 3;\n        }\n\n        return \"\\u2014\".repeat(emCount) + \"\\u2013\".repeat(enCount);\n      })));\n    } else {\n      block.appendChild(text(m));\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}; // Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\n\n\nvar parseNewline = function parseNewline(block) {\n  this.pos += 1; // assume we're at a \\n\n  // check previous node for trailing spaces\n\n  var lastc = block._lastChild;\n\n  if (lastc && lastc.type === \"text\" && lastc._literal[lastc._literal.length - 1] === \" \") {\n    var hardbreak = lastc._literal[lastc._literal.length - 2] === \" \";\n    lastc._literal = lastc._literal.replace(reFinalSpace, \"\");\n    block.appendChild(new Node(hardbreak ? \"linebreak\" : \"softbreak\"));\n  } else {\n    block.appendChild(new Node(\"softbreak\"));\n  }\n\n  this.match(reInitialSpace); // gobble leading spaces in next line\n\n  return true;\n}; // Attempt to parse a link reference, modifying refmap.\n\n\nvar parseReference = function parseReference(s, refmap) {\n  this.subject = s;\n  this.pos = 0;\n  var rawlabel;\n  var dest;\n  var title;\n  var matchChars;\n  var startpos = this.pos; // label:\n\n  matchChars = this.parseLinkLabel();\n\n  if (matchChars === 0) {\n    return 0;\n  } else {\n    rawlabel = this.subject.substr(0, matchChars);\n  } // colon:\n\n\n  if (this.peek() === C_COLON) {\n    this.pos++;\n  } else {\n    this.pos = startpos;\n    return 0;\n  } //  link url\n\n\n  this.spnl();\n  dest = this.parseLinkDestination();\n\n  if (dest === null) {\n    this.pos = startpos;\n    return 0;\n  }\n\n  var beforetitle = this.pos;\n  this.spnl();\n\n  if (this.pos !== beforetitle) {\n    title = this.parseLinkTitle();\n  }\n\n  if (title === null) {\n    title = \"\"; // rewind before spaces\n\n    this.pos = beforetitle;\n  } // make sure we're at line end:\n\n\n  var atLineEnd = true;\n\n  if (this.match(reSpaceAtEndOfLine) === null) {\n    if (title === \"\") {\n      atLineEnd = false;\n    } else {\n      // the potential title we found is not at the line end,\n      // but it could still be a legal link reference if we\n      // discard the title\n      title = \"\"; // rewind before spaces\n\n      this.pos = beforetitle; // and instead check if the link URL is at the line end\n\n      atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n    }\n  }\n\n  if (!atLineEnd) {\n    this.pos = startpos;\n    return 0;\n  }\n\n  var normlabel = normalizeReference(rawlabel);\n\n  if (normlabel === \"\") {\n    // label must contain non-whitespace characters\n    this.pos = startpos;\n    return 0;\n  }\n\n  if (!refmap[normlabel]) {\n    refmap[normlabel] = {\n      destination: dest,\n      title: title\n    };\n  }\n\n  return this.pos - startpos;\n}; // Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\n\n\nvar parseInline = function parseInline(block) {\n  var res = false;\n  var c = this.peek();\n\n  if (c === -1) {\n    return false;\n  }\n\n  switch (c) {\n    case C_NEWLINE:\n      res = this.parseNewline(block);\n      break;\n\n    case C_BACKSLASH:\n      res = this.parseBackslash(block);\n      break;\n\n    case C_BACKTICK:\n      res = this.parseBackticks(block);\n      break;\n\n    case C_ASTERISK:\n    case C_UNDERSCORE:\n      res = this.handleDelim(c, block);\n      break;\n\n    case C_SINGLEQUOTE:\n    case C_DOUBLEQUOTE:\n      res = this.options.smart && this.handleDelim(c, block);\n      break;\n\n    case C_OPEN_BRACKET:\n      res = this.parseOpenBracket(block);\n      break;\n\n    case C_BANG:\n      res = this.parseBang(block);\n      break;\n\n    case C_CLOSE_BRACKET:\n      res = this.parseCloseBracket(block);\n      break;\n\n    case C_LESSTHAN:\n      res = this.parseAutolink(block) || this.parseHtmlTag(block);\n      break;\n\n    case C_AMPERSAND:\n      res = this.parseEntity(block);\n      break;\n\n    default:\n      res = this.parseString(block);\n      break;\n  }\n\n  if (!res) {\n    this.pos += 1;\n    block.appendChild(text(fromCodePoint(c)));\n  }\n\n  return true;\n}; // Parse string content in block into inline children,\n// using refmap to resolve references.\n\n\nvar parseInlines = function parseInlines(block) {\n  this.subject = block._string_content.trim();\n  this.pos = 0;\n  this.delimiters = null;\n  this.brackets = null;\n\n  while (this.parseInline(block)) {}\n\n  block._string_content = null; // allow raw string to be garbage collected\n\n  this.processEmphasis(null);\n}; // The InlineParser object.\n\n\nfunction InlineParser(options) {\n  return {\n    subject: \"\",\n    delimiters: null,\n    // used by handleDelim method\n    brackets: null,\n    pos: 0,\n    refmap: {},\n    match: match,\n    peek: peek,\n    spnl: spnl,\n    parseBackticks: parseBackticks,\n    parseBackslash: parseBackslash,\n    parseAutolink: parseAutolink,\n    parseHtmlTag: parseHtmlTag,\n    scanDelims: scanDelims,\n    handleDelim: handleDelim,\n    parseLinkTitle: parseLinkTitle,\n    parseLinkDestination: parseLinkDestination,\n    parseLinkLabel: parseLinkLabel,\n    parseOpenBracket: parseOpenBracket,\n    parseBang: parseBang,\n    parseCloseBracket: parseCloseBracket,\n    addBracket: addBracket,\n    removeBracket: removeBracket,\n    parseEntity: parseEntity,\n    parseString: parseString,\n    parseNewline: parseNewline,\n    parseReference: parseReference,\n    parseInline: parseInline,\n    processEmphasis: processEmphasis,\n    removeDelimiter: removeDelimiter,\n    options: options || {},\n    parse: parseInlines\n  };\n}\n\nexport default InlineParser;","\"use strict\";\n\nimport Node from \"./node.js\";\nimport { unescapeString, OPENTAG, CLOSETAG } from \"./common.js\";\nimport InlineParser from \"./inlines.js\";\nvar CODE_INDENT = 4;\nvar C_TAB = 9;\nvar C_NEWLINE = 10;\nvar C_GREATERTHAN = 62;\nvar C_LESSTHAN = 60;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\nvar reHtmlBlockOpen = [/./, // dummy for 0\n/^<(?:script|pre|textarea|style)(?:\\s|>|$)/i, /^<!--/, /^<[?]/, /^<![A-Z]/, /^<!\\[CDATA\\[/, /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i, new RegExp(\"^(?:\" + OPENTAG + \"|\" + CLOSETAG + \")\\\\s*$\", \"i\")];\nvar reHtmlBlockClose = [/./, // dummy for 0\n/<\\/(?:script|pre|textarea|style)>/i, /-->/, /\\?>/, />/, /\\]\\]>/];\nvar reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\nvar reBulletListMarker = /^[*+-]/;\nvar reOrderedListMarker = /^(\\d{1,9})([.)])/;\nvar reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\nvar reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\nvar reLineEnding = /\\r\\n|\\n|\\r/; // Returns true if string contains only space characters.\n\nvar isBlank = function isBlank(s) {\n  return !reNonSpace.test(s);\n};\n\nvar isSpaceOrTab = function isSpaceOrTab(c) {\n  return c === C_SPACE || c === C_TAB;\n};\n\nvar peek = function peek(ln, pos) {\n  if (pos < ln.length) {\n    return ln.charCodeAt(pos);\n  } else {\n    return -1;\n  }\n}; // DOC PARSER\n// These are methods of a Parser object, defined below.\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\n\n\nvar endsWithBlankLine = function endsWithBlankLine(block) {\n  while (block) {\n    if (block._lastLineBlank) {\n      return true;\n    }\n\n    var t = block.type;\n\n    if (!block._lastLineChecked && (t === \"list\" || t === \"item\")) {\n      block._lastLineChecked = true;\n      block = block._lastChild;\n    } else {\n      block._lastLineChecked = true;\n      break;\n    }\n  }\n\n  return false;\n}; // Add a line to the block at the tip.  We assume the tip\n// can accept lines -- that check should be done before calling this.\n\n\nvar addLine = function addLine() {\n  if (this.partiallyConsumedTab) {\n    this.offset += 1; // skip over tab\n    // add space characters:\n\n    var charsToTab = 4 - this.column % 4;\n    this.tip._string_content += \" \".repeat(charsToTab);\n  }\n\n  this.tip._string_content += this.currentLine.slice(this.offset) + \"\\n\";\n}; // Add block of type tag as a child of the tip.  If the tip can't\n// accept children, close and finalize it and try its parent,\n// and so on til we find a block that can accept children.\n\n\nvar addChild = function addChild(tag, offset) {\n  while (!this.blocks[this.tip.type].canContain(tag)) {\n    this.finalize(this.tip, this.lineNumber - 1);\n  }\n\n  var column_number = offset + 1; // offset 0 = column 1\n\n  var newBlock = new Node(tag, [[this.lineNumber, column_number], [0, 0]]);\n  newBlock._string_content = \"\";\n  this.tip.appendChild(newBlock);\n  this.tip = newBlock;\n  return newBlock;\n}; // Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\n\n\nvar parseListMarker = function parseListMarker(parser, container) {\n  var rest = parser.currentLine.slice(parser.nextNonspace);\n  var match;\n  var nextc;\n  var spacesStartCol;\n  var spacesStartOffset;\n  var data = {\n    type: null,\n    tight: true,\n    // lists are tight by default\n    bulletChar: null,\n    start: null,\n    delimiter: null,\n    padding: null,\n    markerOffset: parser.indent\n  };\n\n  if (parser.indent >= 4) {\n    return null;\n  }\n\n  if (match = rest.match(reBulletListMarker)) {\n    data.type = \"bullet\";\n    data.bulletChar = match[0][0];\n  } else if ((match = rest.match(reOrderedListMarker)) && (container.type !== \"paragraph\" || match[1] === \"1\")) {\n    data.type = \"ordered\";\n    data.start = parseInt(match[1]);\n    data.delimiter = match[2];\n  } else {\n    return null;\n  } // make sure we have spaces after\n\n\n  nextc = peek(parser.currentLine, parser.nextNonspace + match[0].length);\n\n  if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n    return null;\n  } // if it interrupts paragraph, make sure first line isn't blank\n\n\n  if (container.type === \"paragraph\" && !parser.currentLine.slice(parser.nextNonspace + match[0].length).match(reNonSpace)) {\n    return null;\n  } // we've got a match! advance offset and calculate padding\n\n\n  parser.advanceNextNonspace(); // to start of marker\n\n  parser.advanceOffset(match[0].length, true); // to end of marker\n\n  spacesStartCol = parser.column;\n  spacesStartOffset = parser.offset;\n\n  do {\n    parser.advanceOffset(1, true);\n    nextc = peek(parser.currentLine, parser.offset);\n  } while (parser.column - spacesStartCol < 5 && isSpaceOrTab(nextc));\n\n  var blank_item = peek(parser.currentLine, parser.offset) === -1;\n  var spaces_after_marker = parser.column - spacesStartCol;\n\n  if (spaces_after_marker >= 5 || spaces_after_marker < 1 || blank_item) {\n    data.padding = match[0].length + 1;\n    parser.column = spacesStartCol;\n    parser.offset = spacesStartOffset;\n\n    if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n      parser.advanceOffset(1, true);\n    }\n  } else {\n    data.padding = match[0].length + spaces_after_marker;\n  }\n\n  return data;\n}; // Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\n\n\nvar listsMatch = function listsMatch(list_data, item_data) {\n  return list_data.type === item_data.type && list_data.delimiter === item_data.delimiter && list_data.bulletChar === item_data.bulletChar;\n}; // Finalize and close any unmatched blocks.\n\n\nvar closeUnmatchedBlocks = function closeUnmatchedBlocks() {\n  if (!this.allClosed) {\n    // finalize any blocks not matched\n    while (this.oldtip !== this.lastMatchedContainer) {\n      var parent = this.oldtip._parent;\n      this.finalize(this.oldtip, this.lineNumber - 1);\n      this.oldtip = parent;\n    }\n\n    this.allClosed = true;\n  }\n}; // 'finalize' is run when the block is closed.\n// 'continue' is run to check whether the block is continuing\n// at a certain line and offset (e.g. whether a block quote\n// contains a `>`.  It returns 0 for matched, 1 for not matched,\n// and 2 for \"we've dealt with this line completely, go to next.\"\n\n\nvar blocks = {\n  document: {\n    continue: function _continue() {\n      return 0;\n    },\n    finalize: function finalize() {\n      return;\n    },\n    canContain: function canContain(t) {\n      return t !== \"item\";\n    },\n    acceptsLines: false\n  },\n  list: {\n    continue: function _continue() {\n      return 0;\n    },\n    finalize: function finalize(parser, block) {\n      var item = block._firstChild;\n\n      while (item) {\n        // check for non-final list item ending with blank line:\n        if (endsWithBlankLine(item) && item._next) {\n          block._listData.tight = false;\n          break;\n        } // recurse into children of list item, to see if there are\n        // spaces between any of them:\n\n\n        var subitem = item._firstChild;\n\n        while (subitem) {\n          if (endsWithBlankLine(subitem) && (item._next || subitem._next)) {\n            block._listData.tight = false;\n            break;\n          }\n\n          subitem = subitem._next;\n        }\n\n        item = item._next;\n      }\n    },\n    canContain: function canContain(t) {\n      return t === \"item\";\n    },\n    acceptsLines: false\n  },\n  block_quote: {\n    continue: function _continue(parser) {\n      var ln = parser.currentLine;\n\n      if (!parser.indented && peek(ln, parser.nextNonspace) === C_GREATERTHAN) {\n        parser.advanceNextNonspace();\n        parser.advanceOffset(1, false);\n\n        if (isSpaceOrTab(peek(ln, parser.offset))) {\n          parser.advanceOffset(1, true);\n        }\n      } else {\n        return 1;\n      }\n\n      return 0;\n    },\n    finalize: function finalize() {\n      return;\n    },\n    canContain: function canContain(t) {\n      return t !== \"item\";\n    },\n    acceptsLines: false\n  },\n  item: {\n    continue: function _continue(parser, container) {\n      if (parser.blank) {\n        if (container._firstChild == null) {\n          // Blank line after empty list item\n          return 1;\n        } else {\n          parser.advanceNextNonspace();\n        }\n      } else if (parser.indent >= container._listData.markerOffset + container._listData.padding) {\n        parser.advanceOffset(container._listData.markerOffset + container._listData.padding, true);\n      } else {\n        return 1;\n      }\n\n      return 0;\n    },\n    finalize: function finalize() {\n      return;\n    },\n    canContain: function canContain(t) {\n      return t !== \"item\";\n    },\n    acceptsLines: false\n  },\n  heading: {\n    continue: function _continue() {\n      // a heading can never container > 1 line, so fail to match:\n      return 1;\n    },\n    finalize: function finalize() {\n      return;\n    },\n    canContain: function canContain() {\n      return false;\n    },\n    acceptsLines: false\n  },\n  thematic_break: {\n    continue: function _continue() {\n      // a thematic break can never container > 1 line, so fail to match:\n      return 1;\n    },\n    finalize: function finalize() {\n      return;\n    },\n    canContain: function canContain() {\n      return false;\n    },\n    acceptsLines: false\n  },\n  code_block: {\n    continue: function _continue(parser, container) {\n      var ln = parser.currentLine;\n      var indent = parser.indent;\n\n      if (container._isFenced) {\n        // fenced\n        var match = indent <= 3 && ln.charAt(parser.nextNonspace) === container._fenceChar && ln.slice(parser.nextNonspace).match(reClosingCodeFence);\n\n        if (match && match[0].length >= container._fenceLength) {\n          // closing fence - we're at end of line, so we can return\n          parser.lastLineLength = parser.offset + indent + match[0].length;\n          parser.finalize(container, parser.lineNumber);\n          return 2;\n        } else {\n          // skip optional spaces of fence offset\n          var i = container._fenceOffset;\n\n          while (i > 0 && isSpaceOrTab(peek(ln, parser.offset))) {\n            parser.advanceOffset(1, true);\n            i--;\n          }\n        }\n      } else {\n        // indented\n        if (indent >= CODE_INDENT) {\n          parser.advanceOffset(CODE_INDENT, true);\n        } else if (parser.blank) {\n          parser.advanceNextNonspace();\n        } else {\n          return 1;\n        }\n      }\n\n      return 0;\n    },\n    finalize: function finalize(parser, block) {\n      if (block._isFenced) {\n        // fenced\n        // first line becomes info string\n        var content = block._string_content;\n        var newlinePos = content.indexOf(\"\\n\");\n        var firstLine = content.slice(0, newlinePos);\n        var rest = content.slice(newlinePos + 1);\n        block.info = unescapeString(firstLine.trim());\n        block._literal = rest;\n      } else {\n        // indented\n        block._literal = block._string_content.replace(/(\\n *)+$/, \"\\n\");\n      }\n\n      block._string_content = null; // allow GC\n    },\n    canContain: function canContain() {\n      return false;\n    },\n    acceptsLines: true\n  },\n  html_block: {\n    continue: function _continue(parser, container) {\n      return parser.blank && (container._htmlBlockType === 6 || container._htmlBlockType === 7) ? 1 : 0;\n    },\n    finalize: function finalize(parser, block) {\n      block._literal = block._string_content.replace(/(\\n *)+$/, \"\");\n      block._string_content = null; // allow GC\n    },\n    canContain: function canContain() {\n      return false;\n    },\n    acceptsLines: true\n  },\n  paragraph: {\n    continue: function _continue(parser) {\n      return parser.blank ? 1 : 0;\n    },\n    finalize: function finalize(parser, block) {\n      var pos;\n      var hasReferenceDefs = false; // try parsing the beginning as link reference definitions:\n\n      while (peek(block._string_content, 0) === C_OPEN_BRACKET && (pos = parser.inlineParser.parseReference(block._string_content, parser.refmap))) {\n        block._string_content = block._string_content.slice(pos);\n        hasReferenceDefs = true;\n      }\n\n      if (hasReferenceDefs && isBlank(block._string_content)) {\n        block.unlink();\n      }\n    },\n    canContain: function canContain() {\n      return false;\n    },\n    acceptsLines: true\n  }\n}; // block start functions.  Return values:\n// 0 = no match\n// 1 = matched container, keep going\n// 2 = matched leaf, no more block starts\n\nvar blockStarts = [// block quote\nfunction (parser) {\n  if (!parser.indented && peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN) {\n    parser.advanceNextNonspace();\n    parser.advanceOffset(1, false); // optional following space\n\n    if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n      parser.advanceOffset(1, true);\n    }\n\n    parser.closeUnmatchedBlocks();\n    parser.addChild(\"block_quote\", parser.nextNonspace);\n    return 1;\n  } else {\n    return 0;\n  }\n}, // ATX heading\nfunction (parser) {\n  var match;\n\n  if (!parser.indented && (match = parser.currentLine.slice(parser.nextNonspace).match(reATXHeadingMarker))) {\n    parser.advanceNextNonspace();\n    parser.advanceOffset(match[0].length, false);\n    parser.closeUnmatchedBlocks();\n    var container = parser.addChild(\"heading\", parser.nextNonspace);\n    container.level = match[0].trim().length; // number of #s\n    // remove trailing ###s:\n\n    container._string_content = parser.currentLine.slice(parser.offset).replace(/^[ \\t]*#+[ \\t]*$/, \"\").replace(/[ \\t]+#+[ \\t]*$/, \"\");\n    parser.advanceOffset(parser.currentLine.length - parser.offset);\n    return 2;\n  } else {\n    return 0;\n  }\n}, // Fenced code block\nfunction (parser) {\n  var match;\n\n  if (!parser.indented && (match = parser.currentLine.slice(parser.nextNonspace).match(reCodeFence))) {\n    var fenceLength = match[0].length;\n    parser.closeUnmatchedBlocks();\n    var container = parser.addChild(\"code_block\", parser.nextNonspace);\n    container._isFenced = true;\n    container._fenceLength = fenceLength;\n    container._fenceChar = match[0][0];\n    container._fenceOffset = parser.indent;\n    parser.advanceNextNonspace();\n    parser.advanceOffset(fenceLength, false);\n    return 2;\n  } else {\n    return 0;\n  }\n}, // HTML block\nfunction (parser, container) {\n  if (!parser.indented && peek(parser.currentLine, parser.nextNonspace) === C_LESSTHAN) {\n    var s = parser.currentLine.slice(parser.nextNonspace);\n    var blockType;\n\n    for (blockType = 1; blockType <= 7; blockType++) {\n      if (reHtmlBlockOpen[blockType].test(s) && (blockType < 7 || container.type !== \"paragraph\")) {\n        parser.closeUnmatchedBlocks(); // We don't adjust parser.offset;\n        // spaces are part of the HTML block:\n\n        var b = parser.addChild(\"html_block\", parser.offset);\n        b._htmlBlockType = blockType;\n        return 2;\n      }\n    }\n  }\n\n  return 0;\n}, // Setext heading\nfunction (parser, container) {\n  var match;\n\n  if (!parser.indented && container.type === \"paragraph\" && (match = parser.currentLine.slice(parser.nextNonspace).match(reSetextHeadingLine))) {\n    parser.closeUnmatchedBlocks(); // resolve reference link definitiosn\n\n    var pos;\n\n    while (peek(container._string_content, 0) === C_OPEN_BRACKET && (pos = parser.inlineParser.parseReference(container._string_content, parser.refmap))) {\n      container._string_content = container._string_content.slice(pos);\n    }\n\n    if (container._string_content.length > 0) {\n      var heading = new Node(\"heading\", container.sourcepos);\n      heading.level = match[0][0] === \"=\" ? 1 : 2;\n      heading._string_content = container._string_content;\n      container.insertAfter(heading);\n      container.unlink();\n      parser.tip = heading;\n      parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n      return 2;\n    } else {\n      return 0;\n    }\n  } else {\n    return 0;\n  }\n}, // thematic break\nfunction (parser) {\n  if (!parser.indented && reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))) {\n    parser.closeUnmatchedBlocks();\n    parser.addChild(\"thematic_break\", parser.nextNonspace);\n    parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n    return 2;\n  } else {\n    return 0;\n  }\n}, // list item\nfunction (parser, container) {\n  var data;\n\n  if ((!parser.indented || container.type === \"list\") && (data = parseListMarker(parser, container))) {\n    parser.closeUnmatchedBlocks(); // add the list if needed\n\n    if (parser.tip.type !== \"list\" || !listsMatch(container._listData, data)) {\n      container = parser.addChild(\"list\", parser.nextNonspace);\n      container._listData = data;\n    } // add the list item\n\n\n    container = parser.addChild(\"item\", parser.nextNonspace);\n    container._listData = data;\n    return 1;\n  } else {\n    return 0;\n  }\n}, // indented code block\nfunction (parser) {\n  if (parser.indented && parser.tip.type !== \"paragraph\" && !parser.blank) {\n    // indented code\n    parser.advanceOffset(CODE_INDENT, true);\n    parser.closeUnmatchedBlocks();\n    parser.addChild(\"code_block\", parser.offset);\n    return 2;\n  } else {\n    return 0;\n  }\n}];\n\nvar advanceOffset = function advanceOffset(count, columns) {\n  var currentLine = this.currentLine;\n  var charsToTab, charsToAdvance;\n  var c;\n\n  while (count > 0 && (c = currentLine[this.offset])) {\n    if (c === \"\\t\") {\n      charsToTab = 4 - this.column % 4;\n\n      if (columns) {\n        this.partiallyConsumedTab = charsToTab > count;\n        charsToAdvance = charsToTab > count ? count : charsToTab;\n        this.column += charsToAdvance;\n        this.offset += this.partiallyConsumedTab ? 0 : 1;\n        count -= charsToAdvance;\n      } else {\n        this.partiallyConsumedTab = false;\n        this.column += charsToTab;\n        this.offset += 1;\n        count -= 1;\n      }\n    } else {\n      this.partiallyConsumedTab = false;\n      this.offset += 1;\n      this.column += 1; // assume ascii; block starts are ascii\n\n      count -= 1;\n    }\n  }\n};\n\nvar advanceNextNonspace = function advanceNextNonspace() {\n  this.offset = this.nextNonspace;\n  this.column = this.nextNonspaceColumn;\n  this.partiallyConsumedTab = false;\n};\n\nvar findNextNonspace = function findNextNonspace() {\n  var currentLine = this.currentLine;\n  var i = this.offset;\n  var cols = this.column;\n  var c;\n\n  while ((c = currentLine.charAt(i)) !== \"\") {\n    if (c === \" \") {\n      i++;\n      cols++;\n    } else if (c === \"\\t\") {\n      i++;\n      cols += 4 - cols % 4;\n    } else {\n      break;\n    }\n  }\n\n  this.blank = c === \"\\n\" || c === \"\\r\" || c === \"\";\n  this.nextNonspace = i;\n  this.nextNonspaceColumn = cols;\n  this.indent = this.nextNonspaceColumn - this.column;\n  this.indented = this.indent >= CODE_INDENT;\n}; // Analyze a line of text and update the document appropriately.\n// We parse markdown text by calling this on each line of input,\n// then finalizing the document.\n\n\nvar incorporateLine = function incorporateLine(ln) {\n  var all_matched = true;\n  var t;\n  var container = this.doc;\n  this.oldtip = this.tip;\n  this.offset = 0;\n  this.column = 0;\n  this.blank = false;\n  this.partiallyConsumedTab = false;\n  this.lineNumber += 1; // replace NUL characters for security\n\n  if (ln.indexOf(\"\\0\") !== -1) {\n    ln = ln.replace(/\\0/g, \"\\uFFFD\");\n  }\n\n  this.currentLine = ln; // For each containing block, try to parse the associated line start.\n  // Bail out on failure: container will point to the last matching block.\n  // Set all_matched to false if not all containers match.\n\n  var lastChild;\n\n  while ((lastChild = container._lastChild) && lastChild._open) {\n    container = lastChild;\n    this.findNextNonspace();\n\n    switch (this.blocks[container.type].continue(this, container)) {\n      case 0:\n        // we've matched, keep going\n        break;\n\n      case 1:\n        // we've failed to match a block\n        all_matched = false;\n        break;\n\n      case 2:\n        // we've hit end of line for fenced code close and can return\n        return;\n\n      default:\n        throw \"continue returned illegal value, must be 0, 1, or 2\";\n    }\n\n    if (!all_matched) {\n      container = container._parent; // back up to last matching block\n\n      break;\n    }\n  }\n\n  this.allClosed = container === this.oldtip;\n  this.lastMatchedContainer = container;\n  var matchedLeaf = container.type !== \"paragraph\" && blocks[container.type].acceptsLines;\n  var starts = this.blockStarts;\n  var startsLen = starts.length; // Unless last matched container is a code block, try new container starts,\n  // adding children to the last matched container:\n\n  while (!matchedLeaf) {\n    this.findNextNonspace(); // this is a little performance optimization:\n\n    if (!this.indented && !reMaybeSpecial.test(ln.slice(this.nextNonspace))) {\n      this.advanceNextNonspace();\n      break;\n    }\n\n    var i = 0;\n\n    while (i < startsLen) {\n      var res = starts[i](this, container);\n\n      if (res === 1) {\n        container = this.tip;\n        break;\n      } else if (res === 2) {\n        container = this.tip;\n        matchedLeaf = true;\n        break;\n      } else {\n        i++;\n      }\n    }\n\n    if (i === startsLen) {\n      // nothing matched\n      this.advanceNextNonspace();\n      break;\n    }\n  } // What remains at the offset is a text line.  Add the text to the\n  // appropriate container.\n  // First check for a lazy paragraph continuation:\n\n\n  if (!this.allClosed && !this.blank && this.tip.type === \"paragraph\") {\n    // lazy paragraph continuation\n    this.addLine();\n  } else {\n    // not a lazy continuation\n    // finalize any blocks not matched\n    this.closeUnmatchedBlocks();\n\n    if (this.blank && container.lastChild) {\n      container.lastChild._lastLineBlank = true;\n    }\n\n    t = container.type; // Block quote lines are never blank as they start with >\n    // and we don't count blanks in fenced code for purposes of tight/loose\n    // lists or breaking out of lists.  We also don't set _lastLineBlank\n    // on an empty list item, or if we just closed a fenced block.\n\n    var lastLineBlank = this.blank && !(t === \"block_quote\" || t === \"code_block\" && container._isFenced || t === \"item\" && !container._firstChild && container.sourcepos[0][0] === this.lineNumber); // propagate lastLineBlank up through parents:\n\n    var cont = container;\n\n    while (cont) {\n      cont._lastLineBlank = lastLineBlank;\n      cont = cont._parent;\n    }\n\n    if (this.blocks[t].acceptsLines) {\n      this.addLine(); // if HtmlBlock, check for end condition\n\n      if (t === \"html_block\" && container._htmlBlockType >= 1 && container._htmlBlockType <= 5 && reHtmlBlockClose[container._htmlBlockType].test(this.currentLine.slice(this.offset))) {\n        this.lastLineLength = ln.length;\n        this.finalize(container, this.lineNumber);\n      }\n    } else if (this.offset < ln.length && !this.blank) {\n      // create paragraph container for line\n      container = this.addChild(\"paragraph\", this.offset);\n      this.advanceNextNonspace();\n      this.addLine();\n    }\n  }\n\n  this.lastLineLength = ln.length;\n}; // Finalize a block.  Close it and do any necessary postprocessing,\n// e.g. creating string_content from strings, setting the 'tight'\n// or 'loose' status of a list, and parsing the beginnings\n// of paragraphs for reference definitions.  Reset the tip to the\n// parent of the closed block.\n\n\nvar finalize = function finalize(block, lineNumber) {\n  var above = block._parent;\n  block._open = false;\n  block.sourcepos[1] = [lineNumber, this.lastLineLength];\n  this.blocks[block.type].finalize(this, block);\n  this.tip = above;\n}; // Walk through a block & children recursively, parsing string content\n// into inline content where appropriate.\n\n\nvar processInlines = function processInlines(block) {\n  var node, event, t;\n  var walker = block.walker();\n  this.inlineParser.refmap = this.refmap;\n  this.inlineParser.options = this.options;\n\n  while (event = walker.next()) {\n    node = event.node;\n    t = node.type;\n\n    if (!event.entering && (t === \"paragraph\" || t === \"heading\")) {\n      this.inlineParser.parse(node);\n    }\n  }\n};\n\nvar Document = function Document() {\n  var doc = new Node(\"document\", [[1, 1], [0, 0]]);\n  return doc;\n}; // The main parsing function.  Returns a parsed document AST.\n\n\nvar parse = function parse(input) {\n  this.doc = new Document();\n  this.tip = this.doc;\n  this.refmap = {};\n  this.lineNumber = 0;\n  this.lastLineLength = 0;\n  this.offset = 0;\n  this.column = 0;\n  this.lastMatchedContainer = this.doc;\n  this.currentLine = \"\";\n\n  if (this.options.time) {\n    console.time(\"preparing input\");\n  }\n\n  var lines = input.split(reLineEnding);\n  var len = lines.length;\n\n  if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n    // ignore last blank line created by final newline\n    len -= 1;\n  }\n\n  if (this.options.time) {\n    console.timeEnd(\"preparing input\");\n  }\n\n  if (this.options.time) {\n    console.time(\"block parsing\");\n  }\n\n  for (var i = 0; i < len; i++) {\n    this.incorporateLine(lines[i]);\n  }\n\n  while (this.tip) {\n    this.finalize(this.tip, len);\n  }\n\n  if (this.options.time) {\n    console.timeEnd(\"block parsing\");\n  }\n\n  if (this.options.time) {\n    console.time(\"inline parsing\");\n  }\n\n  this.processInlines(this.doc);\n\n  if (this.options.time) {\n    console.timeEnd(\"inline parsing\");\n  }\n\n  return this.doc;\n}; // The Parser object.\n\n\nfunction Parser(options) {\n  return {\n    doc: new Document(),\n    blocks: blocks,\n    blockStarts: blockStarts,\n    tip: this.doc,\n    oldtip: this.doc,\n    currentLine: \"\",\n    lineNumber: 0,\n    offset: 0,\n    column: 0,\n    nextNonspace: 0,\n    nextNonspaceColumn: 0,\n    indent: 0,\n    indented: false,\n    blank: false,\n    partiallyConsumedTab: false,\n    allClosed: true,\n    lastMatchedContainer: this.doc,\n    refmap: {},\n    lastLineLength: 0,\n    inlineParser: new InlineParser(options),\n    findNextNonspace: findNextNonspace,\n    advanceOffset: advanceOffset,\n    advanceNextNonspace: advanceNextNonspace,\n    addLine: addLine,\n    addChild: addChild,\n    incorporateLine: incorporateLine,\n    finalize: finalize,\n    processInlines: processInlines,\n    closeUnmatchedBlocks: closeUnmatchedBlocks,\n    parse: parse,\n    options: options || {}\n  };\n}\n\nexport default Parser;","\"use strict\";\n\nfunction Renderer() {}\n/**\n *  Walks the AST and calls member methods for each Node type.\n *\n *  @param ast {Node} The root of the abstract syntax tree.\n */\n\n\nfunction render(ast) {\n  var walker = ast.walker(),\n      event,\n      type;\n  this.buffer = \"\";\n  this.lastOut = \"\\n\";\n\n  while (event = walker.next()) {\n    type = event.node.type;\n\n    if (this[type]) {\n      this[type](event.node, event.entering);\n    }\n  }\n\n  return this.buffer;\n}\n/**\n *  Concatenate a literal string to the buffer.\n *\n *  @param str {String} The string to concatenate.\n */\n\n\nfunction lit(str) {\n  this.buffer += str;\n  this.lastOut = str;\n}\n/**\n *  Output a newline to the buffer.\n */\n\n\nfunction cr() {\n  if (this.lastOut !== \"\\n\") {\n    this.lit(\"\\n\");\n  }\n}\n/**\n *  Concatenate a string to the buffer possibly escaping the content.\n *\n *  Concrete renderer implementations should override this method.\n *\n *  @param str {String} The string to concatenate.\n */\n\n\nfunction out(str) {\n  this.lit(str);\n}\n/**\n *  Escape a string for the target renderer.\n *\n *  Abstract function that should be implemented by concrete\n *  renderer implementations.\n *\n *  @param str {String} The string to escape.\n */\n\n\nfunction esc(str) {\n  return str;\n}\n\nRenderer.prototype.render = render;\nRenderer.prototype.out = out;\nRenderer.prototype.lit = lit;\nRenderer.prototype.cr = cr;\nRenderer.prototype.esc = esc;\nexport default Renderer;","\"use strict\";\n\nimport { escapeXml } from \"../common.js\";\nimport Renderer from \"./renderer.js\";\nvar reUnsafeProtocol = /^javascript:|vbscript:|file:|data:/i;\nvar reSafeDataProtocol = /^data:image\\/(?:png|gif|jpeg|webp)/i;\n\nvar potentiallyUnsafe = function potentiallyUnsafe(url) {\n  return reUnsafeProtocol.test(url) && !reSafeDataProtocol.test(url);\n}; // Helper function to produce an HTML tag.\n\n\nfunction tag(name, attrs, selfclosing) {\n  if (this.disableTags > 0) {\n    return;\n  }\n\n  this.buffer += \"<\" + name;\n\n  if (attrs && attrs.length > 0) {\n    var i = 0;\n    var attrib;\n\n    while ((attrib = attrs[i]) !== undefined) {\n      this.buffer += \" \" + attrib[0] + '=\"' + attrib[1] + '\"';\n      i++;\n    }\n  }\n\n  if (selfclosing) {\n    this.buffer += \" /\";\n  }\n\n  this.buffer += \">\";\n  this.lastOut = \">\";\n}\n\nfunction HtmlRenderer(options) {\n  options = options || {}; // by default, soft breaks are rendered as newlines in HTML\n\n  options.softbreak = options.softbreak || \"\\n\"; // set to \"<br />\" to make them hard breaks\n  // set to \" \" if you want to ignore line wrapping in source\n\n  this.disableTags = 0;\n  this.lastOut = \"\\n\";\n  this.options = options;\n}\n/* Node methods */\n\n\nfunction text(node) {\n  this.out(node.literal);\n}\n\nfunction softbreak() {\n  this.lit(this.options.softbreak);\n}\n\nfunction linebreak() {\n  this.tag(\"br\", [], true);\n  this.cr();\n}\n\nfunction link(node, entering) {\n  var attrs = this.attrs(node);\n\n  if (entering) {\n    if (!(this.options.safe && potentiallyUnsafe(node.destination))) {\n      attrs.push([\"href\", this.esc(node.destination)]);\n    }\n\n    if (node.title) {\n      attrs.push([\"title\", this.esc(node.title)]);\n    }\n\n    this.tag(\"a\", attrs);\n  } else {\n    this.tag(\"/a\");\n  }\n}\n\nfunction image(node, entering) {\n  if (entering) {\n    if (this.disableTags === 0) {\n      if (this.options.safe && potentiallyUnsafe(node.destination)) {\n        this.lit('<img src=\"\" alt=\"');\n      } else {\n        this.lit('<img src=\"' + this.esc(node.destination) + '\" alt=\"');\n      }\n    }\n\n    this.disableTags += 1;\n  } else {\n    this.disableTags -= 1;\n\n    if (this.disableTags === 0) {\n      if (node.title) {\n        this.lit('\" title=\"' + this.esc(node.title));\n      }\n\n      this.lit('\" />');\n    }\n  }\n}\n\nfunction emph(node, entering) {\n  this.tag(entering ? \"em\" : \"/em\");\n}\n\nfunction strong(node, entering) {\n  this.tag(entering ? \"strong\" : \"/strong\");\n}\n\nfunction paragraph(node, entering) {\n  var grandparent = node.parent.parent,\n      attrs = this.attrs(node);\n\n  if (grandparent !== null && grandparent.type === \"list\") {\n    if (grandparent.listTight) {\n      return;\n    }\n  }\n\n  if (entering) {\n    this.cr();\n    this.tag(\"p\", attrs);\n  } else {\n    this.tag(\"/p\");\n    this.cr();\n  }\n}\n\nfunction heading(node, entering) {\n  var tagname = \"h\" + node.level,\n      attrs = this.attrs(node);\n\n  if (entering) {\n    this.cr();\n    this.tag(tagname, attrs);\n  } else {\n    this.tag(\"/\" + tagname);\n    this.cr();\n  }\n}\n\nfunction code(node) {\n  this.tag(\"code\");\n  this.out(node.literal);\n  this.tag(\"/code\");\n}\n\nfunction code_block(node) {\n  var info_words = node.info ? node.info.split(/\\s+/) : [],\n      attrs = this.attrs(node);\n\n  if (info_words.length > 0 && info_words[0].length > 0) {\n    attrs.push([\"class\", \"language-\" + this.esc(info_words[0])]);\n  }\n\n  this.cr();\n  this.tag(\"pre\");\n  this.tag(\"code\", attrs);\n  this.out(node.literal);\n  this.tag(\"/code\");\n  this.tag(\"/pre\");\n  this.cr();\n}\n\nfunction thematic_break(node) {\n  var attrs = this.attrs(node);\n  this.cr();\n  this.tag(\"hr\", attrs, true);\n  this.cr();\n}\n\nfunction block_quote(node, entering) {\n  var attrs = this.attrs(node);\n\n  if (entering) {\n    this.cr();\n    this.tag(\"blockquote\", attrs);\n    this.cr();\n  } else {\n    this.cr();\n    this.tag(\"/blockquote\");\n    this.cr();\n  }\n}\n\nfunction list(node, entering) {\n  var tagname = node.listType === \"bullet\" ? \"ul\" : \"ol\",\n      attrs = this.attrs(node);\n\n  if (entering) {\n    var start = node.listStart;\n\n    if (start !== null && start !== 1) {\n      attrs.push([\"start\", start.toString()]);\n    }\n\n    this.cr();\n    this.tag(tagname, attrs);\n    this.cr();\n  } else {\n    this.cr();\n    this.tag(\"/\" + tagname);\n    this.cr();\n  }\n}\n\nfunction item(node, entering) {\n  var attrs = this.attrs(node);\n\n  if (entering) {\n    this.tag(\"li\", attrs);\n  } else {\n    this.tag(\"/li\");\n    this.cr();\n  }\n}\n\nfunction html_inline(node) {\n  if (this.options.safe) {\n    this.lit(\"<!-- raw HTML omitted -->\");\n  } else {\n    this.lit(node.literal);\n  }\n}\n\nfunction html_block(node) {\n  this.cr();\n\n  if (this.options.safe) {\n    this.lit(\"<!-- raw HTML omitted -->\");\n  } else {\n    this.lit(node.literal);\n  }\n\n  this.cr();\n}\n\nfunction custom_inline(node, entering) {\n  if (entering && node.onEnter) {\n    this.lit(node.onEnter);\n  } else if (!entering && node.onExit) {\n    this.lit(node.onExit);\n  }\n}\n\nfunction custom_block(node, entering) {\n  this.cr();\n\n  if (entering && node.onEnter) {\n    this.lit(node.onEnter);\n  } else if (!entering && node.onExit) {\n    this.lit(node.onExit);\n  }\n\n  this.cr();\n}\n/* Helper methods */\n\n\nfunction out(s) {\n  this.lit(this.esc(s));\n}\n\nfunction attrs(node) {\n  var att = [];\n\n  if (this.options.sourcepos) {\n    var pos = node.sourcepos;\n\n    if (pos) {\n      att.push([\"data-sourcepos\", String(pos[0][0]) + \":\" + String(pos[0][1]) + \"-\" + String(pos[1][0]) + \":\" + String(pos[1][1])]);\n    }\n  }\n\n  return att;\n} // quick browser-compatible inheritance\n\n\nHtmlRenderer.prototype = Object.create(Renderer.prototype);\nHtmlRenderer.prototype.text = text;\nHtmlRenderer.prototype.html_inline = html_inline;\nHtmlRenderer.prototype.html_block = html_block;\nHtmlRenderer.prototype.softbreak = softbreak;\nHtmlRenderer.prototype.linebreak = linebreak;\nHtmlRenderer.prototype.link = link;\nHtmlRenderer.prototype.image = image;\nHtmlRenderer.prototype.emph = emph;\nHtmlRenderer.prototype.strong = strong;\nHtmlRenderer.prototype.paragraph = paragraph;\nHtmlRenderer.prototype.heading = heading;\nHtmlRenderer.prototype.code = code;\nHtmlRenderer.prototype.code_block = code_block;\nHtmlRenderer.prototype.thematic_break = thematic_break;\nHtmlRenderer.prototype.block_quote = block_quote;\nHtmlRenderer.prototype.list = list;\nHtmlRenderer.prototype.item = item;\nHtmlRenderer.prototype.custom_inline = custom_inline;\nHtmlRenderer.prototype.custom_block = custom_block;\nHtmlRenderer.prototype.esc = escapeXml;\nHtmlRenderer.prototype.out = out;\nHtmlRenderer.prototype.tag = tag;\nHtmlRenderer.prototype.attrs = attrs;\nexport default HtmlRenderer;","\"use strict\";\n\nimport Renderer from \"./renderer.js\";\nimport { escapeXml } from \"../common.js\";\nvar reXMLTag = /\\<[^>]*\\>/;\n\nfunction toTagName(s) {\n  return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n}\n\nfunction XmlRenderer(options) {\n  options = options || {};\n  this.disableTags = 0;\n  this.lastOut = \"\\n\";\n  this.indentLevel = 0;\n  this.indent = \"  \";\n  this.options = options;\n}\n\nfunction render(ast) {\n  this.buffer = \"\";\n  var attrs;\n  var tagname;\n  var walker = ast.walker();\n  var event, node, entering;\n  var container;\n  var selfClosing;\n  var nodetype;\n  var options = this.options;\n\n  if (options.time) {\n    console.time(\"rendering\");\n  }\n\n  this.buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n  this.buffer += '<!DOCTYPE document SYSTEM \"CommonMark.dtd\">\\n';\n\n  while (event = walker.next()) {\n    entering = event.entering;\n    node = event.node;\n    nodetype = node.type;\n    container = node.isContainer;\n    selfClosing = nodetype === \"thematic_break\" || nodetype === \"linebreak\" || nodetype === \"softbreak\";\n    tagname = toTagName(nodetype);\n\n    if (entering) {\n      attrs = [];\n\n      switch (nodetype) {\n        case \"document\":\n          attrs.push([\"xmlns\", \"http://commonmark.org/xml/1.0\"]);\n          break;\n\n        case \"list\":\n          if (node.listType !== null) {\n            attrs.push([\"type\", node.listType.toLowerCase()]);\n          }\n\n          if (node.listStart !== null) {\n            attrs.push([\"start\", String(node.listStart)]);\n          }\n\n          if (node.listTight !== null) {\n            attrs.push([\"tight\", node.listTight ? \"true\" : \"false\"]);\n          }\n\n          var delim = node.listDelimiter;\n\n          if (delim !== null) {\n            var delimword = \"\";\n\n            if (delim === \".\") {\n              delimword = \"period\";\n            } else {\n              delimword = \"paren\";\n            }\n\n            attrs.push([\"delimiter\", delimword]);\n          }\n\n          break;\n\n        case \"code_block\":\n          if (node.info) {\n            attrs.push([\"info\", node.info]);\n          }\n\n          break;\n\n        case \"heading\":\n          attrs.push([\"level\", String(node.level)]);\n          break;\n\n        case \"link\":\n        case \"image\":\n          attrs.push([\"destination\", node.destination]);\n          attrs.push([\"title\", node.title]);\n          break;\n\n        case \"custom_inline\":\n        case \"custom_block\":\n          attrs.push([\"on_enter\", node.onEnter]);\n          attrs.push([\"on_exit\", node.onExit]);\n          break;\n\n        default:\n          break;\n      }\n\n      if (options.sourcepos) {\n        var pos = node.sourcepos;\n\n        if (pos) {\n          attrs.push([\"sourcepos\", String(pos[0][0]) + \":\" + String(pos[0][1]) + \"-\" + String(pos[1][0]) + \":\" + String(pos[1][1])]);\n        }\n      }\n\n      this.cr();\n      this.out(this.tag(tagname, attrs, selfClosing));\n\n      if (container) {\n        this.indentLevel += 1;\n      } else if (!container && !selfClosing) {\n        var lit = node.literal;\n\n        if (lit) {\n          this.out(this.esc(lit));\n        }\n\n        this.out(this.tag(\"/\" + tagname));\n      }\n    } else {\n      this.indentLevel -= 1;\n      this.cr();\n      this.out(this.tag(\"/\" + tagname));\n    }\n  }\n\n  if (options.time) {\n    console.timeEnd(\"rendering\");\n  }\n\n  this.buffer += \"\\n\";\n  return this.buffer;\n}\n\nfunction out(s) {\n  if (this.disableTags > 0) {\n    this.buffer += s.replace(reXMLTag, \"\");\n  } else {\n    this.buffer += s;\n  }\n\n  this.lastOut = s;\n}\n\nfunction cr() {\n  if (this.lastOut !== \"\\n\") {\n    this.buffer += \"\\n\";\n    this.lastOut = \"\\n\";\n\n    for (var i = this.indentLevel; i > 0; i--) {\n      this.buffer += this.indent;\n    }\n  }\n} // Helper function to produce an XML tag.\n\n\nfunction tag(name, attrs, selfclosing) {\n  var result = \"<\" + name;\n\n  if (attrs && attrs.length > 0) {\n    var i = 0;\n    var attrib;\n\n    while ((attrib = attrs[i]) !== undefined) {\n      result += \" \" + attrib[0] + '=\"' + this.esc(attrib[1]) + '\"';\n      i++;\n    }\n  }\n\n  if (selfclosing) {\n    result += \" /\";\n  }\n\n  result += \">\";\n  return result;\n} // quick browser-compatible inheritance\n\n\nXmlRenderer.prototype = Object.create(Renderer.prototype);\nXmlRenderer.prototype.render = render;\nXmlRenderer.prototype.out = out;\nXmlRenderer.prototype.cr = cr;\nXmlRenderer.prototype.tag = tag;\nXmlRenderer.prototype.esc = escapeXml;\nexport default XmlRenderer;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\n\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\n\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\n\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\n\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\n\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\n\nfunction getStrictDecoder(map) {\n  var keys = Object.keys(map).join(\"|\");\n  var replace = getReplacer(map);\n  keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n  var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n  return function (str) {\n    return String(str).replace(re, replace);\n  };\n}\n\nvar sorter = function sorter(a, b) {\n  return a < b ? 1 : -1;\n};\n\nexports.decodeHTML = function () {\n  var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n  var keys = Object.keys(entities_json_1.default).sort(sorter);\n\n  for (var i = 0, j = 0; i < keys.length; i++) {\n    if (legacy[j] === keys[i]) {\n      keys[i] += \";?\";\n      j++;\n    } else {\n      keys[i] += \";\";\n    }\n  }\n\n  var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n  var replace = getReplacer(entities_json_1.default);\n\n  function replacer(str) {\n    if (str.substr(-1) !== \";\") str += \";\";\n    return replace(str);\n  } //TODO consider creating a merged map\n\n\n  return function (str) {\n    return String(str).replace(re, replacer);\n  };\n}();\n\nfunction getReplacer(map) {\n  return function replace(str) {\n    if (str.charAt(1) === \"#\") {\n      var secondChar = str.charAt(2);\n\n      if (secondChar === \"X\" || secondChar === \"x\") {\n        return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n      }\n\n      return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n    }\n\n    return map[str.slice(1, -1)];\n  };\n}","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\")); // modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\n\n\nfunction decodeCodePoint(codePoint) {\n  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {\n    return \"\\uFFFD\";\n  }\n\n  if (codePoint in decode_json_1.default) {\n    codePoint = decode_json_1.default[codePoint];\n  }\n\n  var output = \"\";\n\n  if (codePoint > 0xffff) {\n    codePoint -= 0x10000;\n    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n    codePoint = 0xdc00 | codePoint & 0x3ff;\n  }\n\n  output += String.fromCharCode(codePoint);\n  return output;\n}\n\nexports.default = decodeCodePoint;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\n\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\n\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\n\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\n\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj) {\n  return Object.keys(obj).sort().reduce(function (inverse, name) {\n    inverse[obj[name]] = \"&\" + name + \";\";\n    return inverse;\n  }, {});\n}\n\nfunction getInverseReplacer(inverse) {\n  var single = [];\n  var multiple = [];\n\n  for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n    var k = _a[_i];\n\n    if (k.length === 1) {\n      // Add value to single array\n      single.push(\"\\\\\" + k);\n    } else {\n      // Add value to multiple array\n      multiple.push(k);\n    }\n  } // Add ranges to single characters.\n\n\n  single.sort();\n\n  for (var start = 0; start < single.length - 1; start++) {\n    // Find the end of a run of characters\n    var end = start;\n\n    while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n      end += 1;\n    }\n\n    var count = 1 + end - start; // We want to replace at least three characters\n\n    if (count < 3) continue;\n    single.splice(start, count, single[start] + \"-\" + single[end]);\n  }\n\n  multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n  return new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\n\nfunction singleCharReplacer(c) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re) {\n  return function (data) {\n    return data.replace(re, function (name) {\n      return inverse[name];\n    }).replace(reNonASCII, singleCharReplacer);\n  };\n}\n\nvar reXmlChars = getInverseReplacer(inverseXML);\n\nfunction escape(data) {\n  return data.replace(reXmlChars, singleCharReplacer).replace(reNonASCII, singleCharReplacer);\n}\n\nexports.escape = escape;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encode = exports.decodeStrict = exports.decode = void 0;\n\nvar decode_1 = require(\"./decode\");\n\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\n\n\nfunction decode(data, level) {\n  return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\n\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\n\nfunction decodeStrict(data, level) {\n  return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\n\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n */\n\nfunction encode(data, level) {\n  return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\n\nexports.encode = encode;\n\nvar encode_2 = require(\"./encode\");\n\nObject.defineProperty(exports, \"encodeXML\", {\n  enumerable: true,\n  get: function get() {\n    return encode_2.encodeXML;\n  }\n});\nObject.defineProperty(exports, \"encodeHTML\", {\n  enumerable: true,\n  get: function get() {\n    return encode_2.encodeHTML;\n  }\n});\nObject.defineProperty(exports, \"escape\", {\n  enumerable: true,\n  get: function get() {\n    return encode_2.escape;\n  }\n}); // Legacy aliases\n\nObject.defineProperty(exports, \"encodeHTML4\", {\n  enumerable: true,\n  get: function get() {\n    return encode_2.encodeHTML;\n  }\n});\nObject.defineProperty(exports, \"encodeHTML5\", {\n  enumerable: true,\n  get: function get() {\n    return encode_2.encodeHTML;\n  }\n});\n\nvar decode_2 = require(\"./decode\");\n\nObject.defineProperty(exports, \"decodeXML\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeXML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeHTML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTMLStrict\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeHTMLStrict;\n  }\n}); // Legacy aliases\n\nObject.defineProperty(exports, \"decodeHTML4\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeHTML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML5\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeHTML;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML4Strict\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeHTMLStrict;\n  }\n});\nObject.defineProperty(exports, \"decodeHTML5Strict\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeHTMLStrict;\n  }\n});\nObject.defineProperty(exports, \"decodeXMLStrict\", {\n  enumerable: true,\n  get: function get() {\n    return decode_2.decodeXML;\n  }\n});","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","/*! http://mths.be/repeat v0.2.0 by @mathias */\nif (!String.prototype.repeat) {\n  (function () {\n    'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\n    var defineProperty = function () {\n      // IE 8 only supports `Object.defineProperty` on DOM elements\n      try {\n        var object = {};\n        var $defineProperty = Object.defineProperty;\n        var result = $defineProperty(object, object, object) && $defineProperty;\n      } catch (error) {}\n\n      return result;\n    }();\n\n    var repeat = function repeat(count) {\n      if (this == null) {\n        throw TypeError();\n      }\n\n      var string = String(this); // `ToInteger`\n\n      var n = count ? Number(count) : 0;\n\n      if (n != n) {\n        // better `isNaN`\n        n = 0;\n      } // Account for out-of-bounds indices\n\n\n      if (n < 0 || n == Infinity) {\n        throw RangeError();\n      }\n\n      var result = '';\n\n      while (n) {\n        if (n % 2 == 1) {\n          result += string;\n        }\n\n        if (n > 1) {\n          string += string;\n        }\n\n        n >>= 1;\n      }\n\n      return result;\n    };\n\n    if (defineProperty) {\n      defineProperty(String.prototype, 'repeat', {\n        'value': repeat,\n        'configurable': true,\n        'writable': true\n      });\n    } else {\n      String.prototype.repeat = repeat;\n    }\n  })();\n}"],"sourceRoot":""}