{"version":3,"sources":["webpack://badersur.github.io/./src/components/project.tsx","webpack://badersur.github.io/./src/templates/projects.tsx"],"names":["mdReader","Parser","mdWriter","HtmlRenderer","softbreak","lang","data","link","linkType","name","description","parsedDescription","parse","descriptionInHtml","render","linkText","useMiscYamlData","headings","className","href","dangerouslySetInnerHTML","__html","pageContext","pageLink","projectsNode","allMiscYaml","edges","node","projects","projectsDescription","messages","projectsYamlEdges","allProjectsYaml","multiLangs","title","map","project"],"mappings":"+NAMMA,EAAW,IAAIC,KACfC,EAAW,IAAIC,KAAa,CAACC,UAAW,MAoC9C,EAlCgB,SAAC,GAA+B,IAA9BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAEtBC,EAIGD,EAJHC,KACAC,EAGGF,EAHHE,SACeC,EAEZH,EAFHG,KAAQJ,GACcK,EACnBJ,EADHI,YAAeL,GAEVM,EAAoBX,EAASY,MAAMF,GACnCG,EAAoBX,EAASY,OAAOH,GAInBI,GAEnBC,SAHHC,SACET,GAAaH,GAIhB,OACC,uBAAKa,UAAU,iBACd,0BACC,qBAAGC,KAAMZ,GAAOE,IAGjB,uBACCW,wBAAyB,CAACC,OAAQR,GAClCK,UAAU,wBAGX,qBAAGC,KAAMZ,EAAMW,UAAU,uBACvBH,KCkDL,EA7EyB,SAAC,GAA+C,IAA9CT,EAA8C,EAA9CA,KACnBD,EADiE,EAAxCiB,YACzBjB,KACDkB,EAAW,aACXC,EAAelB,EAAKmB,YAAYC,MAAM,GAAGC,KAG1BC,EAKjBJ,EANHP,SACCW,SAAYvB,GAGkBwB,EAE5BL,EAHHM,SACCD,oBAAuBxB,GAGnB0B,EAAoBzB,EAAK0B,gBAAgBN,MAE/C,OACC,gBAAC,IAAD,CAAQrB,KAAMA,EAAMkB,SAAUA,GAC7B,gBAAC,IAAD,CACCU,YAAU,EACV5B,KAAMA,EACNkB,SAAUA,EACVW,MAAON,EACPlB,YAAamB,IAGd,2BAASX,UAAU,YAClB,0BAAKU,GAEL,uBAAKV,UAAU,iBACba,EAAkBI,KAAI,gBAAQC,EAAR,EAAET,KAAF,OACtB,gBAAC,EAAD,CAAStB,KAAMA,EAAMC,KAAM8B","file":"component---src-templates-projects-tsx-d755a3aeaf71f023ee8f.js","sourcesContent":["import React from 'react';\nimport {Parser, HtmlRenderer} from 'commonmark';\n\nimport {ProjectProps} from '../types';\nimport useMiscYamlData from '../hooks/use-misc-data';\n\nconst mdReader = new Parser();\nconst mdWriter = new HtmlRenderer({softbreak: ' '});\n\nconst Project = ({lang, data}: ProjectProps) => {\n\tconst {\n\t\tlink,\n\t\tlinkType,\n\t\tname: {[lang]: name},\n\t\tdescription: {[lang]: description}\n\t} = data;\n\tconst parsedDescription = mdReader.parse(description);\n\tconst descriptionInHtml = mdWriter.render(parsedDescription);\n\n\tconst {\n\t\theadings: {\n\t\t\t[linkType]: {[lang]: linkText}\n\t\t}\n\t} = useMiscYamlData();\n\n\treturn (\n\t\t<div className=\"Project Board\">\n\t\t\t<h2>\n\t\t\t\t<a href={link}>{name}</a>\n\t\t\t</h2>\n\n\t\t\t<div\n\t\t\t\tdangerouslySetInnerHTML={{__html: descriptionInHtml}}\n\t\t\t\tclassName=\"Project-description\"\n\t\t\t/>\n\n\t\t\t<a href={link} className=\"Project-link Button\">\n\t\t\t\t{linkText}\n\t\t\t</a>\n\t\t</div>\n\t);\n};\n\nexport default Project;\n","import React from 'react';\nimport {graphql} from 'gatsby';\n\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\nimport {ProjectsTemplateProps} from '../types';\nimport Project from '../components/project';\n\nimport '../styles/projects.css';\n\nconst ProjectsTemplate = ({data, pageContext}: ProjectsTemplateProps) => {\n\tconst {lang} = pageContext;\n\tconst pageLink = '/projects/';\n\tconst projectsNode = data.allMiscYaml.edges[0].node;\n\tconst {\n\t\theadings: {\n\t\t\tprojects: {[lang]: projects}\n\t\t},\n\t\tmessages: {\n\t\t\tprojectsDescription: {[lang]: projectsDescription}\n\t\t}\n\t} = projectsNode;\n\tconst projectsYamlEdges = data.allProjectsYaml.edges;\n\n\treturn (\n\t\t<Layout lang={lang} pageLink={pageLink}>\n\t\t\t<SEO\n\t\t\t\tmultiLangs\n\t\t\t\tlang={lang}\n\t\t\t\tpageLink={pageLink}\n\t\t\t\ttitle={projects}\n\t\t\t\tdescription={projectsDescription}\n\t\t\t/>\n\n\t\t\t<section className=\"Projects\">\n\t\t\t\t<h1>{projects}</h1>\n\n\t\t\t\t<div className=\"Projects-list\">\n\t\t\t\t\t{projectsYamlEdges.map(({node: project}) => (\n\t\t\t\t\t\t<Project lang={lang} data={project} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport const query = graphql`\n    query {\n        allMiscYaml {\n            edges {\n                node {\n                    headings {\n                        projects {\n                            ar\n                            en\n                        }\n                    }\n                    messages {\n                        projectsDescription {\n                            ar\n                            en\n                        }\n                    }\n                }\n            }\n        }\n\n        allProjectsYaml {\n            edges {\n                node {\n                    name {\n                        ar\n                        en\n                    }\n                    description {\n                        ar\n                        en\n                    }\n                    link\n                    linkType\n                }\n            }\n        }\n    }\n`;\n\nexport default ProjectsTemplate;\n"],"sourceRoot":""}